// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistance.Database;

#nullable disable

namespace Persistance.Migrations
{
    [DbContext(typeof(PetCareDB))]
    partial class PetCareDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Concretes.AcceptRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AcceptStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("YearsOfPetExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.HasIndex("UserId");

                    b.ToTable("AcceptRequests");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Adoption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Adoptions");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Breed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BreedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PetTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetTypeId");

                    b.ToTable("Breeds");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChatName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VetId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ShelterId")
                        .IsUnique();

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceiverUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdoptionId")
                        .HasColumnType("int");

                    b.Property<short>("Age")
                        .HasColumnType("smallint");

                    b.Property<int>("BreedId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrls")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdopted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PetTypeId");

                    b.HasIndex("ShelterId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.PetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PetTypes");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Shelter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Shelters");
                });

            modelBuilder.Entity("Domain.Identity.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenCreateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RefreshTokenExpireTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 2001,
                            AccessFailedCount = 0,
                            Address = "Address1",
                            City = "City1",
                            ConcurrencyStamp = "46d3ac5d-a256-4a4b-bd0f-816c603013ff",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3591),
                            DateOfBirth = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user1@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName1",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3593),
                            Lastname = "LastName1",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@EXAMPLE.COM",
                            NormalizedUserName = "USER1",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user1/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3471),
                            TwoFactorEnabled = false,
                            UserName = "user1"
                        },
                        new
                        {
                            Id = 2002,
                            AccessFailedCount = 0,
                            Address = "Address2",
                            City = "City2",
                            ConcurrencyStamp = "17008b3c-e00a-412b-865f-525b78c7a27a",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3634),
                            DateOfBirth = new DateTime(2000, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user2@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName2",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3634),
                            Lastname = "LastName2",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@EXAMPLE.COM",
                            NormalizedUserName = "USER2",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user2/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3615),
                            TwoFactorEnabled = false,
                            UserName = "user2"
                        },
                        new
                        {
                            Id = 2003,
                            AccessFailedCount = 0,
                            Address = "Address3",
                            City = "City3",
                            ConcurrencyStamp = "34ff9bbf-2734-43c7-85e5-21c499d5331b",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3662),
                            DateOfBirth = new DateTime(2000, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user3@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName3",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3663),
                            Lastname = "LastName3",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@EXAMPLE.COM",
                            NormalizedUserName = "USER3",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user3/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3643),
                            TwoFactorEnabled = false,
                            UserName = "user3"
                        },
                        new
                        {
                            Id = 2004,
                            AccessFailedCount = 0,
                            Address = "Address4",
                            City = "City4",
                            ConcurrencyStamp = "13ca3b50-322e-461c-9bbf-30ec0fae1838",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3675),
                            DateOfBirth = new DateTime(2000, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user4@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName4",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3675),
                            Lastname = "LastName4",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@EXAMPLE.COM",
                            NormalizedUserName = "USER4",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user4/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3670),
                            TwoFactorEnabled = false,
                            UserName = "user4"
                        },
                        new
                        {
                            Id = 2005,
                            AccessFailedCount = 0,
                            Address = "Address5",
                            City = "City5",
                            ConcurrencyStamp = "c01447db-d69b-4ff9-8829-b69ba97e378e",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3687),
                            DateOfBirth = new DateTime(2000, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user5@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName5",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3687),
                            Lastname = "LastName5",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER5@EXAMPLE.COM",
                            NormalizedUserName = "USER5",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user5/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3682),
                            TwoFactorEnabled = false,
                            UserName = "user5"
                        },
                        new
                        {
                            Id = 2006,
                            AccessFailedCount = 0,
                            Address = "Address6",
                            City = "City6",
                            ConcurrencyStamp = "1525b30e-6e99-4e71-906e-00c659408d14",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3701),
                            DateOfBirth = new DateTime(2000, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user6@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName6",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3702),
                            Lastname = "LastName6",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER6@EXAMPLE.COM",
                            NormalizedUserName = "USER6",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user6/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3697),
                            TwoFactorEnabled = false,
                            UserName = "user6"
                        },
                        new
                        {
                            Id = 2007,
                            AccessFailedCount = 0,
                            Address = "Address7",
                            City = "City7",
                            ConcurrencyStamp = "f4bf956c-6964-4ca0-a1e3-ce6be051b899",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3713),
                            DateOfBirth = new DateTime(2000, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user7@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName7",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3714),
                            Lastname = "LastName7",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER7@EXAMPLE.COM",
                            NormalizedUserName = "USER7",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user7/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3709),
                            TwoFactorEnabled = false,
                            UserName = "user7"
                        },
                        new
                        {
                            Id = 2008,
                            AccessFailedCount = 0,
                            Address = "Address8",
                            City = "City8",
                            ConcurrencyStamp = "dc3cb40d-fbda-443f-aacf-b839bf657639",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3726),
                            DateOfBirth = new DateTime(2000, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user8@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName8",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3726),
                            Lastname = "LastName8",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER8@EXAMPLE.COM",
                            NormalizedUserName = "USER8",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user8/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3720),
                            TwoFactorEnabled = false,
                            UserName = "user8"
                        },
                        new
                        {
                            Id = 2009,
                            AccessFailedCount = 0,
                            Address = "Address9",
                            City = "City9",
                            ConcurrencyStamp = "a4eff339-6b4b-42cc-bb2f-3b431caad40d",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3738),
                            DateOfBirth = new DateTime(2000, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user9@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName9",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3738),
                            Lastname = "LastName9",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER9@EXAMPLE.COM",
                            NormalizedUserName = "USER9",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user9/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3733),
                            TwoFactorEnabled = false,
                            UserName = "user9"
                        },
                        new
                        {
                            Id = 2010,
                            AccessFailedCount = 0,
                            Address = "Address10",
                            City = "City10",
                            ConcurrencyStamp = "5f4ed920-533c-48fd-8dc4-3953ad6386c9",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3754),
                            DateOfBirth = new DateTime(2000, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user10@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName10",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3754),
                            Lastname = "LastName10",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER10@EXAMPLE.COM",
                            NormalizedUserName = "USER10",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user10/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3746),
                            TwoFactorEnabled = false,
                            UserName = "user10"
                        },
                        new
                        {
                            Id = 2011,
                            AccessFailedCount = 0,
                            Address = "Address11",
                            City = "City11",
                            ConcurrencyStamp = "9daa573d-5b36-4306-9464-dabe2f43990a",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3771),
                            DateOfBirth = new DateTime(2000, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user11@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName11",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3772),
                            Lastname = "LastName11",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER11@EXAMPLE.COM",
                            NormalizedUserName = "USER11",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user11/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3762),
                            TwoFactorEnabled = false,
                            UserName = "user11"
                        },
                        new
                        {
                            Id = 2012,
                            AccessFailedCount = 0,
                            Address = "Address12",
                            City = "City12",
                            ConcurrencyStamp = "6e1d58db-2b6c-4e56-919e-eb9e8fc59dc2",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3790),
                            DateOfBirth = new DateTime(2000, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user12@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName12",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3791),
                            Lastname = "LastName12",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER12@EXAMPLE.COM",
                            NormalizedUserName = "USER12",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user12/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3785),
                            TwoFactorEnabled = false,
                            UserName = "user12"
                        },
                        new
                        {
                            Id = 2013,
                            AccessFailedCount = 0,
                            Address = "Address13",
                            City = "City13",
                            ConcurrencyStamp = "66f8fe35-fccc-4cc3-869d-12df665478ed",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3803),
                            DateOfBirth = new DateTime(2000, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user13@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName13",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3804),
                            Lastname = "LastName13",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER13@EXAMPLE.COM",
                            NormalizedUserName = "USER13",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user13/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3798),
                            TwoFactorEnabled = false,
                            UserName = "user13"
                        },
                        new
                        {
                            Id = 2014,
                            AccessFailedCount = 0,
                            Address = "Address14",
                            City = "City14",
                            ConcurrencyStamp = "e572b22c-a514-4986-aef6-981006d12424",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3815),
                            DateOfBirth = new DateTime(2000, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user14@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName14",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3816),
                            Lastname = "LastName14",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER14@EXAMPLE.COM",
                            NormalizedUserName = "USER14",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user14/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3811),
                            TwoFactorEnabled = false,
                            UserName = "user14"
                        },
                        new
                        {
                            Id = 2015,
                            AccessFailedCount = 0,
                            Address = "Address15",
                            City = "City15",
                            ConcurrencyStamp = "003e3909-7f0c-43e1-970e-2e7c4e8bf1f9",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3827),
                            DateOfBirth = new DateTime(2000, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user15@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName15",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3828),
                            Lastname = "LastName15",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER15@EXAMPLE.COM",
                            NormalizedUserName = "USER15",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user15/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3823),
                            TwoFactorEnabled = false,
                            UserName = "user15"
                        },
                        new
                        {
                            Id = 2016,
                            AccessFailedCount = 0,
                            Address = "Address16",
                            City = "City16",
                            ConcurrencyStamp = "598b2463-0166-4a86-9faa-fb3825081130",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3839),
                            DateOfBirth = new DateTime(2000, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user16@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName16",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3840),
                            Lastname = "LastName16",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER16@EXAMPLE.COM",
                            NormalizedUserName = "USER16",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user16/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3834),
                            TwoFactorEnabled = false,
                            UserName = "user16"
                        },
                        new
                        {
                            Id = 2017,
                            AccessFailedCount = 0,
                            Address = "Address17",
                            City = "City17",
                            ConcurrencyStamp = "410b21a5-4e1e-4709-b220-4c3eade14e33",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3851),
                            DateOfBirth = new DateTime(2000, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user17@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName17",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3852),
                            Lastname = "LastName17",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER17@EXAMPLE.COM",
                            NormalizedUserName = "USER17",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user17/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3847),
                            TwoFactorEnabled = false,
                            UserName = "user17"
                        },
                        new
                        {
                            Id = 2018,
                            AccessFailedCount = 0,
                            Address = "Address18",
                            City = "City18",
                            ConcurrencyStamp = "bbd6487c-9918-4fb4-8f4f-93d905643b1b",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3865),
                            DateOfBirth = new DateTime(2000, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user18@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName18",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3866),
                            Lastname = "LastName18",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER18@EXAMPLE.COM",
                            NormalizedUserName = "USER18",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user18/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3860),
                            TwoFactorEnabled = false,
                            UserName = "user18"
                        },
                        new
                        {
                            Id = 2019,
                            AccessFailedCount = 0,
                            Address = "Address19",
                            City = "City19",
                            ConcurrencyStamp = "ac306a7c-cb8f-4bd2-8a0c-a620d338821a",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3881),
                            DateOfBirth = new DateTime(2000, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user19@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName19",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3881),
                            Lastname = "LastName19",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER19@EXAMPLE.COM",
                            NormalizedUserName = "USER19",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user19/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3873),
                            TwoFactorEnabled = false,
                            UserName = "user19"
                        },
                        new
                        {
                            Id = 2020,
                            AccessFailedCount = 0,
                            Address = "Address20",
                            City = "City20",
                            ConcurrencyStamp = "7712b86a-243c-4330-bec9-c64ef8d8ed08",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3894),
                            DateOfBirth = new DateTime(2000, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user20@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName20",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3894),
                            Lastname = "LastName20",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER20@EXAMPLE.COM",
                            NormalizedUserName = "USER20",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user20/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3889),
                            TwoFactorEnabled = false,
                            UserName = "user20"
                        },
                        new
                        {
                            Id = 2021,
                            AccessFailedCount = 0,
                            Address = "Address21",
                            City = "City21",
                            ConcurrencyStamp = "7e233705-04d1-4153-9b71-6a54a076acfc",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3912),
                            DateOfBirth = new DateTime(2000, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Company21@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName21",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3912),
                            Lastname = "CompanyLastName21",
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY21@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY21",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user21/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3907),
                            TwoFactorEnabled = false,
                            UserName = "Company21"
                        },
                        new
                        {
                            Id = 2022,
                            AccessFailedCount = 0,
                            Address = "Address22",
                            City = "City22",
                            ConcurrencyStamp = "421fd55d-05b7-48a7-ab88-6bf03ae42e61",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3929),
                            DateOfBirth = new DateTime(2000, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Company22@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName22",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3930),
                            Lastname = "CompanyLastName22",
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY22@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY22",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user22/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3924),
                            TwoFactorEnabled = false,
                            UserName = "Company22"
                        },
                        new
                        {
                            Id = 2023,
                            AccessFailedCount = 0,
                            Address = "Address23",
                            City = "City23",
                            ConcurrencyStamp = "482942ae-296f-4934-9f8b-0c9ee47364ed",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3942),
                            DateOfBirth = new DateTime(2000, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Company23@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName23",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3942),
                            Lastname = "CompanyLastName23",
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY23@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY23",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user23/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3937),
                            TwoFactorEnabled = false,
                            UserName = "Company23"
                        },
                        new
                        {
                            Id = 2024,
                            AccessFailedCount = 0,
                            Address = "Address24",
                            City = "City24",
                            ConcurrencyStamp = "664d31c1-ad7d-44bf-89a6-ffb2975c4ba5",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3954),
                            DateOfBirth = new DateTime(2000, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Company24@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName24",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3955),
                            Lastname = "CompanyLastName24",
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY24@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY24",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user24/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3949),
                            TwoFactorEnabled = false,
                            UserName = "Company24"
                        },
                        new
                        {
                            Id = 2025,
                            AccessFailedCount = 0,
                            Address = "Address25",
                            City = "City25",
                            ConcurrencyStamp = "fb2b2f34-3188-4746-a89e-b5b08740df02",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3966),
                            DateOfBirth = new DateTime(2000, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Company25@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName25",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3967),
                            Lastname = "CompanyLastName25",
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY25@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY25",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user25/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3962),
                            TwoFactorEnabled = false,
                            UserName = "Company25"
                        },
                        new
                        {
                            Id = 2026,
                            AccessFailedCount = 0,
                            Address = "Address26",
                            City = "City26",
                            ConcurrencyStamp = "1de0c7a4-1082-48f0-9809-fef48f528b94",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3979),
                            DateOfBirth = new DateTime(2000, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Company26@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName26",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3979),
                            Lastname = "CompanyLastName26",
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY26@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY26",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user26/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3973),
                            TwoFactorEnabled = false,
                            UserName = "Company26"
                        },
                        new
                        {
                            Id = 2027,
                            AccessFailedCount = 0,
                            Address = "Address27",
                            City = "City27",
                            ConcurrencyStamp = "e48f1c96-6a3a-48f8-b133-87dea54f4ce8",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3994),
                            DateOfBirth = new DateTime(2000, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Company27@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName27",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(3994),
                            Lastname = "CompanyLastName27",
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY27@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY27",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user27/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(3986),
                            TwoFactorEnabled = false,
                            UserName = "Company27"
                        },
                        new
                        {
                            Id = 2028,
                            AccessFailedCount = 0,
                            Address = "Address28",
                            City = "City28",
                            ConcurrencyStamp = "09479982-2d61-4e5a-a335-93da2b19d60a",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4006),
                            DateOfBirth = new DateTime(2000, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Company28@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName28",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4006),
                            Lastname = "CompanyLastName28",
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY28@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY28",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user28/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4001),
                            TwoFactorEnabled = false,
                            UserName = "Company28"
                        },
                        new
                        {
                            Id = 2029,
                            AccessFailedCount = 0,
                            Address = "Address29",
                            City = "City29",
                            ConcurrencyStamp = "fa60ff9a-319b-4b9e-8c8b-72af20b0fc40",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4018),
                            DateOfBirth = new DateTime(2000, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Company29@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName29",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4019),
                            Lastname = "CompanyLastName29",
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY29@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY29",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user29/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4014),
                            TwoFactorEnabled = false,
                            UserName = "Company29"
                        },
                        new
                        {
                            Id = 2030,
                            AccessFailedCount = 0,
                            Address = "Address30",
                            City = "City30",
                            ConcurrencyStamp = "c2c24d3a-8539-4b2a-a11e-c907413ae2c4",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4043),
                            DateOfBirth = new DateTime(2000, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Company30@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName30",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4043),
                            Lastname = "CompanyLastName30",
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY30@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY30",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user30/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4038),
                            TwoFactorEnabled = false,
                            UserName = "Company30"
                        },
                        new
                        {
                            Id = 2031,
                            AccessFailedCount = 0,
                            Address = "Address31",
                            City = "City31",
                            ConcurrencyStamp = "8279f6ac-e8cc-4697-83c8-840f5b023445",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4055),
                            DateOfBirth = new DateTime(2000, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Company31@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName31",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4056),
                            Lastname = "CompanyLastName31",
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY31@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY31",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user31/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4050),
                            TwoFactorEnabled = false,
                            UserName = "Company31"
                        },
                        new
                        {
                            Id = 2032,
                            AccessFailedCount = 0,
                            Address = "Address32",
                            City = "City32",
                            ConcurrencyStamp = "c308dd23-fa18-4675-b802-af611c87514b",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4068),
                            DateOfBirth = new DateTime(2000, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Company32@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName32",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4068),
                            Lastname = "CompanyLastName32",
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY32@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY32",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user32/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4063),
                            TwoFactorEnabled = false,
                            UserName = "Company32"
                        },
                        new
                        {
                            Id = 2033,
                            AccessFailedCount = 0,
                            Address = "Address33",
                            City = "City33",
                            ConcurrencyStamp = "3a3dca7d-8453-422b-9cba-3bedd9990c78",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4080),
                            DateOfBirth = new DateTime(2000, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Company33@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName33",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4080),
                            Lastname = "CompanyLastName33",
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY33@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY33",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user33/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4075),
                            TwoFactorEnabled = false,
                            UserName = "Company33"
                        },
                        new
                        {
                            Id = 2034,
                            AccessFailedCount = 0,
                            Address = "Address34",
                            City = "City34",
                            ConcurrencyStamp = "9fe991df-e959-42c3-8913-b186eaca03c6",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4094),
                            DateOfBirth = new DateTime(2000, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Company34@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName34",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4094),
                            Lastname = "CompanyLastName34",
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY34@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY34",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user34/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4089),
                            TwoFactorEnabled = false,
                            UserName = "Company34"
                        },
                        new
                        {
                            Id = 2035,
                            AccessFailedCount = 0,
                            Address = "Address35",
                            City = "City35",
                            ConcurrencyStamp = "cb470c4d-ad37-4492-9e95-cd3a4d535f4c",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4109),
                            DateOfBirth = new DateTime(2000, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Company35@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName35",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4110),
                            Lastname = "CompanyLastName35",
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY35@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY35",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user35/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4101),
                            TwoFactorEnabled = false,
                            UserName = "Company35"
                        },
                        new
                        {
                            Id = 2036,
                            AccessFailedCount = 0,
                            Address = "Address36",
                            City = "City36",
                            ConcurrencyStamp = "24a3ed82-b9f5-4e1d-914a-3f8ad5808828",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4121),
                            DateOfBirth = new DateTime(2000, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Company36@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName36",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4122),
                            Lastname = "CompanyLastName36",
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY36@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY36",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user36/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4116),
                            TwoFactorEnabled = false,
                            UserName = "Company36"
                        },
                        new
                        {
                            Id = 2037,
                            AccessFailedCount = 0,
                            Address = "Address37",
                            City = "City37",
                            ConcurrencyStamp = "e7869c30-015c-4fb6-8f0b-37446b0be215",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4134),
                            DateOfBirth = new DateTime(2000, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Company37@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName37",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4134),
                            Lastname = "CompanyLastName37",
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY37@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY37",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user37/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4129),
                            TwoFactorEnabled = false,
                            UserName = "Company37"
                        },
                        new
                        {
                            Id = 2038,
                            AccessFailedCount = 0,
                            Address = "Address38",
                            City = "City38",
                            ConcurrencyStamp = "d76f1a7a-703c-4e6b-b59c-f95fad5fb77d",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4152),
                            DateOfBirth = new DateTime(2000, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Company38@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName38",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4152),
                            Lastname = "CompanyLastName38",
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY38@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY38",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user38/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4141),
                            TwoFactorEnabled = false,
                            UserName = "Company38"
                        },
                        new
                        {
                            Id = 2039,
                            AccessFailedCount = 0,
                            Address = "Address39",
                            City = "City39",
                            ConcurrencyStamp = "7d53e569-41d0-45c8-a918-7289ca5e780e",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4165),
                            DateOfBirth = new DateTime(2000, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Company39@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName39",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4165),
                            Lastname = "CompanyLastName39",
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY39@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY39",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user39/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4160),
                            TwoFactorEnabled = false,
                            UserName = "Company39"
                        },
                        new
                        {
                            Id = 2040,
                            AccessFailedCount = 0,
                            Address = "Address40",
                            City = "City40",
                            ConcurrencyStamp = "e21bb549-3e7e-4c62-8e75-f5257fab575a",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4177),
                            DateOfBirth = new DateTime(2000, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Company40@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName40",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4177),
                            Lastname = "CompanyLastName40",
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY40@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY40",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user40/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4172),
                            TwoFactorEnabled = false,
                            UserName = "Company40"
                        },
                        new
                        {
                            Id = 2041,
                            AccessFailedCount = 0,
                            Address = "Address41",
                            City = "City41",
                            ConcurrencyStamp = "87e54a35-ca7d-44cb-baae-1da8e14e7cb8",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4189),
                            DateOfBirth = new DateTime(2000, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vet41@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName41",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4189),
                            Lastname = "VetLastName41",
                            LockoutEnabled = false,
                            NormalizedEmail = "VET41@EXAMPLE.COM",
                            NormalizedUserName = "VET41",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user41/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4184),
                            TwoFactorEnabled = false,
                            UserName = "Vet41"
                        },
                        new
                        {
                            Id = 2042,
                            AccessFailedCount = 0,
                            Address = "Address42",
                            City = "City42",
                            ConcurrencyStamp = "cc74b3f0-1178-4d9b-8d8f-3cb9467769e3",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4208),
                            DateOfBirth = new DateTime(2000, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vet42@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName42",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4208),
                            Lastname = "VetLastName42",
                            LockoutEnabled = false,
                            NormalizedEmail = "VET42@EXAMPLE.COM",
                            NormalizedUserName = "VET42",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user42/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4202),
                            TwoFactorEnabled = false,
                            UserName = "Vet42"
                        },
                        new
                        {
                            Id = 2043,
                            AccessFailedCount = 0,
                            Address = "Address43",
                            City = "City43",
                            ConcurrencyStamp = "3ed32891-768c-4a5a-9857-b3b756478a5f",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4223),
                            DateOfBirth = new DateTime(2000, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vet43@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName43",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4224),
                            Lastname = "VetLastName43",
                            LockoutEnabled = false,
                            NormalizedEmail = "VET43@EXAMPLE.COM",
                            NormalizedUserName = "VET43",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user43/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4216),
                            TwoFactorEnabled = false,
                            UserName = "Vet43"
                        },
                        new
                        {
                            Id = 2044,
                            AccessFailedCount = 0,
                            Address = "Address44",
                            City = "City44",
                            ConcurrencyStamp = "8daa76f6-3dbc-42bb-b4d4-487b145e0a66",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4236),
                            DateOfBirth = new DateTime(2000, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vet44@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName44",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4237),
                            Lastname = "VetLastName44",
                            LockoutEnabled = false,
                            NormalizedEmail = "VET44@EXAMPLE.COM",
                            NormalizedUserName = "VET44",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user44/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4231),
                            TwoFactorEnabled = false,
                            UserName = "Vet44"
                        },
                        new
                        {
                            Id = 2045,
                            AccessFailedCount = 0,
                            Address = "Address45",
                            City = "City45",
                            ConcurrencyStamp = "3e828d6d-a411-4f20-b490-baa1ef2e17bf",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4248),
                            DateOfBirth = new DateTime(2000, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vet45@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName45",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4249),
                            Lastname = "VetLastName45",
                            LockoutEnabled = false,
                            NormalizedEmail = "VET45@EXAMPLE.COM",
                            NormalizedUserName = "VET45",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user45/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4244),
                            TwoFactorEnabled = false,
                            UserName = "Vet45"
                        },
                        new
                        {
                            Id = 2046,
                            AccessFailedCount = 0,
                            Address = "Address46",
                            City = "City46",
                            ConcurrencyStamp = "d17a2828-6ffe-4b6b-af96-697356744dfb",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4260),
                            DateOfBirth = new DateTime(2000, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vet46@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName46",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4261),
                            Lastname = "VetLastName46",
                            LockoutEnabled = false,
                            NormalizedEmail = "VET46@EXAMPLE.COM",
                            NormalizedUserName = "VET46",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user46/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4256),
                            TwoFactorEnabled = false,
                            UserName = "Vet46"
                        },
                        new
                        {
                            Id = 2047,
                            AccessFailedCount = 0,
                            Address = "Address47",
                            City = "City47",
                            ConcurrencyStamp = "6fe6893f-7c2c-40b3-8f03-319f128a2250",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4272),
                            DateOfBirth = new DateTime(2000, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vet47@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName47",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4273),
                            Lastname = "VetLastName47",
                            LockoutEnabled = false,
                            NormalizedEmail = "VET47@EXAMPLE.COM",
                            NormalizedUserName = "VET47",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user47/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4268),
                            TwoFactorEnabled = false,
                            UserName = "Vet47"
                        },
                        new
                        {
                            Id = 2048,
                            AccessFailedCount = 0,
                            Address = "Address48",
                            City = "City48",
                            ConcurrencyStamp = "805a8eb6-88eb-489b-9c64-db0e1293b650",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4291),
                            DateOfBirth = new DateTime(2000, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vet48@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName48",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4292),
                            Lastname = "VetLastName48",
                            LockoutEnabled = false,
                            NormalizedEmail = "VET48@EXAMPLE.COM",
                            NormalizedUserName = "VET48",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user48/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4286),
                            TwoFactorEnabled = false,
                            UserName = "Vet48"
                        },
                        new
                        {
                            Id = 2049,
                            AccessFailedCount = 0,
                            Address = "Address49",
                            City = "City49",
                            ConcurrencyStamp = "34e4c9ac-faba-466f-8323-73ca260d1279",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4304),
                            DateOfBirth = new DateTime(2000, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vet49@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName49",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4304),
                            Lastname = "VetLastName49",
                            LockoutEnabled = false,
                            NormalizedEmail = "VET49@EXAMPLE.COM",
                            NormalizedUserName = "VET49",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user49/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4299),
                            TwoFactorEnabled = false,
                            UserName = "Vet49"
                        },
                        new
                        {
                            Id = 2050,
                            AccessFailedCount = 0,
                            Address = "Address50",
                            City = "City50",
                            ConcurrencyStamp = "f044807d-b62e-4f77-8a8b-aa7b493171bf",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4316),
                            DateOfBirth = new DateTime(2000, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vet50@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName50",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4317),
                            Lastname = "VetLastName50",
                            LockoutEnabled = false,
                            NormalizedEmail = "VET50@EXAMPLE.COM",
                            NormalizedUserName = "VET50",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user50/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4311),
                            TwoFactorEnabled = false,
                            UserName = "Vet50"
                        },
                        new
                        {
                            Id = 2051,
                            AccessFailedCount = 0,
                            Address = "Address51",
                            City = "City51",
                            ConcurrencyStamp = "aa799ec5-903c-47bf-9590-db9695c10f39",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4331),
                            DateOfBirth = new DateTime(2000, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vet51@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName51",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4332),
                            Lastname = "VetLastName51",
                            LockoutEnabled = false,
                            NormalizedEmail = "VET51@EXAMPLE.COM",
                            NormalizedUserName = "VET51",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user51/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4324),
                            TwoFactorEnabled = false,
                            UserName = "Vet51"
                        },
                        new
                        {
                            Id = 2052,
                            AccessFailedCount = 0,
                            Address = "Address52",
                            City = "City52",
                            ConcurrencyStamp = "000b03c3-c22f-4aa0-8129-a889deeb3080",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4343),
                            DateOfBirth = new DateTime(2000, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vet52@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName52",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4344),
                            Lastname = "VetLastName52",
                            LockoutEnabled = false,
                            NormalizedEmail = "VET52@EXAMPLE.COM",
                            NormalizedUserName = "VET52",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user52/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4339),
                            TwoFactorEnabled = false,
                            UserName = "Vet52"
                        },
                        new
                        {
                            Id = 2053,
                            AccessFailedCount = 0,
                            Address = "Address53",
                            City = "City53",
                            ConcurrencyStamp = "d885d496-57b3-4729-bf10-704308d92456",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4506),
                            DateOfBirth = new DateTime(2000, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vet53@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName53",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4507),
                            Lastname = "VetLastName53",
                            LockoutEnabled = false,
                            NormalizedEmail = "VET53@EXAMPLE.COM",
                            NormalizedUserName = "VET53",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user53/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4350),
                            TwoFactorEnabled = false,
                            UserName = "Vet53"
                        },
                        new
                        {
                            Id = 2054,
                            AccessFailedCount = 0,
                            Address = "Address54",
                            City = "City54",
                            ConcurrencyStamp = "aca50c6a-fe0f-4509-adee-02400d8a8d9b",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4544),
                            DateOfBirth = new DateTime(2000, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vet54@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName54",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4545),
                            Lastname = "VetLastName54",
                            LockoutEnabled = false,
                            NormalizedEmail = "VET54@EXAMPLE.COM",
                            NormalizedUserName = "VET54",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user54/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4529),
                            TwoFactorEnabled = false,
                            UserName = "Vet54"
                        },
                        new
                        {
                            Id = 2055,
                            AccessFailedCount = 0,
                            Address = "Address55",
                            City = "City55",
                            ConcurrencyStamp = "130693d0-fdd9-4d55-aae6-48ab2575b263",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4581),
                            DateOfBirth = new DateTime(2000, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vet55@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName55",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4582),
                            Lastname = "VetLastName55",
                            LockoutEnabled = false,
                            NormalizedEmail = "VET55@EXAMPLE.COM",
                            NormalizedUserName = "VET55",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user55/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4565),
                            TwoFactorEnabled = false,
                            UserName = "Vet55"
                        },
                        new
                        {
                            Id = 2056,
                            AccessFailedCount = 0,
                            Address = "Address56",
                            City = "City56",
                            ConcurrencyStamp = "a34f4533-a31a-4672-b0c7-99d1481eebde",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4752),
                            DateOfBirth = new DateTime(2000, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vet56@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName56",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4752),
                            Lastname = "VetLastName56",
                            LockoutEnabled = false,
                            NormalizedEmail = "VET56@EXAMPLE.COM",
                            NormalizedUserName = "VET56",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user56/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4747),
                            TwoFactorEnabled = false,
                            UserName = "Vet56"
                        },
                        new
                        {
                            Id = 2057,
                            AccessFailedCount = 0,
                            Address = "Address57",
                            City = "City57",
                            ConcurrencyStamp = "c73797b4-fe59-4f17-9fd9-c46793fd2da3",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4770),
                            DateOfBirth = new DateTime(2000, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vet57@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName57",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4770),
                            Lastname = "VetLastName57",
                            LockoutEnabled = false,
                            NormalizedEmail = "VET57@EXAMPLE.COM",
                            NormalizedUserName = "VET57",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user57/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4759),
                            TwoFactorEnabled = false,
                            UserName = "Vet57"
                        },
                        new
                        {
                            Id = 2058,
                            AccessFailedCount = 0,
                            Address = "Address58",
                            City = "City58",
                            ConcurrencyStamp = "33c9b237-7fe2-4470-9a5f-1416b8abe8ab",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4782),
                            DateOfBirth = new DateTime(2000, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vet58@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName58",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4783),
                            Lastname = "VetLastName58",
                            LockoutEnabled = false,
                            NormalizedEmail = "VET58@EXAMPLE.COM",
                            NormalizedUserName = "VET58",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user58/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4777),
                            TwoFactorEnabled = false,
                            UserName = "Vet58"
                        },
                        new
                        {
                            Id = 2059,
                            AccessFailedCount = 0,
                            Address = "Address59",
                            City = "City59",
                            ConcurrencyStamp = "c49960d8-da8c-40cc-9457-2e12fe6d53c3",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4797),
                            DateOfBirth = new DateTime(2000, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vet59@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName59",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4798),
                            Lastname = "VetLastName59",
                            LockoutEnabled = false,
                            NormalizedEmail = "VET59@EXAMPLE.COM",
                            NormalizedUserName = "VET59",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user59/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4790),
                            TwoFactorEnabled = false,
                            UserName = "Vet59"
                        },
                        new
                        {
                            Id = 2060,
                            AccessFailedCount = 0,
                            Address = "Address60",
                            City = "City60",
                            ConcurrencyStamp = "d7c645b9-43ad-494c-b69f-107fb24ae375",
                            CreatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4809),
                            DateOfBirth = new DateTime(2000, 2, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Vet60@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName60",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 13, 14, 39, 39, 393, DateTimeKind.Utc).AddTicks(4810),
                            Lastname = "VetLastName60",
                            LockoutEnabled = false,
                            NormalizedEmail = "VET60@EXAMPLE.COM",
                            NormalizedUserName = "VET60",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user60/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 13, 18, 39, 39, 393, DateTimeKind.Local).AddTicks(4805),
                            TwoFactorEnabled = false,
                            UserName = "Vet60"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 2001,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2002,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2003,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2004,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2005,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2006,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2007,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2008,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2009,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2010,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2011,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2012,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2013,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2014,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2015,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2016,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2017,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2018,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2019,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2020,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2021,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2022,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2023,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2024,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2025,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2026,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2027,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2028,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2029,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2030,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2031,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2032,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2033,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2034,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2035,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2036,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2037,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2038,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2039,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2040,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2041,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2042,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2043,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2044,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2045,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2046,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2047,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2048,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2049,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2050,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2051,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2052,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2053,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2054,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2055,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2056,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2057,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2058,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2059,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2060,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Concretes.AcceptRequest", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.Pet", "Pet")
                        .WithMany("AcceptRequests")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("AcceptRequests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Adoption", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.Pet", "Pet")
                        .WithOne("Adoption")
                        .HasForeignKey("Domain.Entities.Concretes.Adoption", "PetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("Adoptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Breed", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.PetType", "PetType")
                        .WithMany("Breeds")
                        .HasForeignKey("PetTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PetType");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Chat", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("Chats")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "Vet")
                        .WithMany()
                        .HasForeignKey("VetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vet");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Donation", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("Donations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Location", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.Shelter", "Shelter")
                        .WithOne("Location")
                        .HasForeignKey("Domain.Entities.Concretes.Location", "ShelterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Shelter");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Message", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "Sender")
                        .WithMany("Messages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Notification", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Pet", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.PetType", "PetType")
                        .WithMany("Pets")
                        .HasForeignKey("PetTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Concretes.Shelter", "Shelter")
                        .WithMany("Pets")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PetType");

                    b.Navigation("Shelter");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Shelter", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", "Company")
                        .WithMany("Shelters")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Chat", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Pet", b =>
                {
                    b.Navigation("AcceptRequests");

                    b.Navigation("Adoption");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.PetType", b =>
                {
                    b.Navigation("Breeds");

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Shelter", b =>
                {
                    b.Navigation("Location")
                        .IsRequired();

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("Domain.Identity.AppUser", b =>
                {
                    b.Navigation("AcceptRequests");

                    b.Navigation("Adoptions");

                    b.Navigation("Chats");

                    b.Navigation("Donations");

                    b.Navigation("Messages");

                    b.Navigation("Notifications");

                    b.Navigation("Shelters");
                });
#pragma warning restore 612, 618
        }
    }
}
