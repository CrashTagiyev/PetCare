// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistance.Database;

#nullable disable

namespace Persistance.Migrations
{
    [DbContext(typeof(PetCareDB))]
    [Migration("20240815115047_mig991")]
    partial class mig991
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Concretes.AcceptRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AcceptStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("YearsOfPetExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.HasIndex("UserId");

                    b.ToTable("AcceptRequests");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Adoption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Adoptions");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Breed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BreedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PetTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetTypeId");

                    b.ToTable("Breeds");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChatName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VetId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ShelterId")
                        .IsUnique();

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceiverUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdoptionId")
                        .HasColumnType("int");

                    b.Property<short>("Age")
                        .HasColumnType("smallint");

                    b.Property<int>("BreedId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrls")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdopted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PetTypeId");

                    b.HasIndex("ShelterId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.PetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PetTypes");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Shelter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Shelters");
                });

            modelBuilder.Entity("Domain.Identity.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Dislikes")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Likes")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenCreateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RefreshTokenExpireTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 2001,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address1",
                            City = "City1",
                            ConcurrencyStamp = "cd3551b5-045b-400e-afee-7504f39219eb",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7119),
                            DateOfBirth = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "user1@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName1",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7120),
                            Lastname = "LastName1",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@EXAMPLE.COM",
                            NormalizedUserName = "USER1",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user1/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7005),
                            TwoFactorEnabled = false,
                            UserName = "user1"
                        },
                        new
                        {
                            Id = 2002,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address2",
                            City = "City2",
                            ConcurrencyStamp = "7beae854-9060-435c-b3b0-8af0ce66e336",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7152),
                            DateOfBirth = new DateTime(2000, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "user2@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName2",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7152),
                            Lastname = "LastName2",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@EXAMPLE.COM",
                            NormalizedUserName = "USER2",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user2/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7144),
                            TwoFactorEnabled = false,
                            UserName = "user2"
                        },
                        new
                        {
                            Id = 2003,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address3",
                            City = "City3",
                            ConcurrencyStamp = "d7e501f2-d255-4127-846f-000b35f1ff6d",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7168),
                            DateOfBirth = new DateTime(2000, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "user3@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName3",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7168),
                            Lastname = "LastName3",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@EXAMPLE.COM",
                            NormalizedUserName = "USER3",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user3/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7162),
                            TwoFactorEnabled = false,
                            UserName = "user3"
                        },
                        new
                        {
                            Id = 2004,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address4",
                            City = "City4",
                            ConcurrencyStamp = "46e46b23-dbdb-4dff-a771-36266eaf0fd3",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7338),
                            DateOfBirth = new DateTime(2000, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "user4@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName4",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7338),
                            Lastname = "LastName4",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@EXAMPLE.COM",
                            NormalizedUserName = "USER4",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user4/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7177),
                            TwoFactorEnabled = false,
                            UserName = "user4"
                        },
                        new
                        {
                            Id = 2005,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address5",
                            City = "City5",
                            ConcurrencyStamp = "155f31da-4dfc-4328-abdc-14e0290df701",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7356),
                            DateOfBirth = new DateTime(2000, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "user5@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName5",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7356),
                            Lastname = "LastName5",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER5@EXAMPLE.COM",
                            NormalizedUserName = "USER5",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user5/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7348),
                            TwoFactorEnabled = false,
                            UserName = "user5"
                        },
                        new
                        {
                            Id = 2006,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address6",
                            City = "City6",
                            ConcurrencyStamp = "a6dd5bd9-bb15-44bb-a2da-bfa97cbbacd5",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7375),
                            DateOfBirth = new DateTime(2000, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "user6@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName6",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7375),
                            Lastname = "LastName6",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER6@EXAMPLE.COM",
                            NormalizedUserName = "USER6",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user6/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7369),
                            TwoFactorEnabled = false,
                            UserName = "user6"
                        },
                        new
                        {
                            Id = 2007,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address7",
                            City = "City7",
                            ConcurrencyStamp = "c1864f4c-53fe-4593-9df6-26c2def076fb",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7388),
                            DateOfBirth = new DateTime(2000, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "user7@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName7",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7389),
                            Lastname = "LastName7",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER7@EXAMPLE.COM",
                            NormalizedUserName = "USER7",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user7/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7383),
                            TwoFactorEnabled = false,
                            UserName = "user7"
                        },
                        new
                        {
                            Id = 2008,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address8",
                            City = "City8",
                            ConcurrencyStamp = "00ebb9c5-1957-432e-b6f5-5f2f04c95ef5",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7401),
                            DateOfBirth = new DateTime(2000, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "user8@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName8",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7402),
                            Lastname = "LastName8",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER8@EXAMPLE.COM",
                            NormalizedUserName = "USER8",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user8/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7396),
                            TwoFactorEnabled = false,
                            UserName = "user8"
                        },
                        new
                        {
                            Id = 2009,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address9",
                            City = "City9",
                            ConcurrencyStamp = "12f095d9-db29-4f21-ae3d-a14f71807518",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7414),
                            DateOfBirth = new DateTime(2000, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "user9@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName9",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7415),
                            Lastname = "LastName9",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER9@EXAMPLE.COM",
                            NormalizedUserName = "USER9",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user9/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7409),
                            TwoFactorEnabled = false,
                            UserName = "user9"
                        },
                        new
                        {
                            Id = 2010,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address10",
                            City = "City10",
                            ConcurrencyStamp = "aedd9658-ef03-47bd-a37f-1fea92791999",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7431),
                            DateOfBirth = new DateTime(2000, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "user10@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName10",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7432),
                            Lastname = "LastName10",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER10@EXAMPLE.COM",
                            NormalizedUserName = "USER10",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user10/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7423),
                            TwoFactorEnabled = false,
                            UserName = "user10"
                        },
                        new
                        {
                            Id = 2011,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address11",
                            City = "City11",
                            ConcurrencyStamp = "6766454d-6c96-4cec-aa97-85826eb96f5e",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7446),
                            DateOfBirth = new DateTime(2000, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "user11@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName11",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7447),
                            Lastname = "LastName11",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER11@EXAMPLE.COM",
                            NormalizedUserName = "USER11",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user11/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7440),
                            TwoFactorEnabled = false,
                            UserName = "user11"
                        },
                        new
                        {
                            Id = 2012,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address12",
                            City = "City12",
                            ConcurrencyStamp = "7f422e4e-ad8d-4b35-a0fb-b66901778af8",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7465),
                            DateOfBirth = new DateTime(2000, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "user12@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName12",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7465),
                            Lastname = "LastName12",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER12@EXAMPLE.COM",
                            NormalizedUserName = "USER12",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user12/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7454),
                            TwoFactorEnabled = false,
                            UserName = "user12"
                        },
                        new
                        {
                            Id = 2013,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address13",
                            City = "City13",
                            ConcurrencyStamp = "24712a9e-58c1-4d14-ae91-5ab69f7a1722",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7478),
                            DateOfBirth = new DateTime(2000, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "user13@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName13",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7478),
                            Lastname = "LastName13",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER13@EXAMPLE.COM",
                            NormalizedUserName = "USER13",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user13/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7472),
                            TwoFactorEnabled = false,
                            UserName = "user13"
                        },
                        new
                        {
                            Id = 2014,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address14",
                            City = "City14",
                            ConcurrencyStamp = "f5578202-d29a-43e7-8254-10b82328f3c1",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7546),
                            DateOfBirth = new DateTime(2000, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "user14@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName14",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7546),
                            Lastname = "LastName14",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER14@EXAMPLE.COM",
                            NormalizedUserName = "USER14",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user14/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7539),
                            TwoFactorEnabled = false,
                            UserName = "user14"
                        },
                        new
                        {
                            Id = 2015,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address15",
                            City = "City15",
                            ConcurrencyStamp = "4756cbba-0902-47ae-8e1e-25d61df6fc77",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7560),
                            DateOfBirth = new DateTime(2000, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "user15@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName15",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7560),
                            Lastname = "LastName15",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER15@EXAMPLE.COM",
                            NormalizedUserName = "USER15",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user15/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7554),
                            TwoFactorEnabled = false,
                            UserName = "user15"
                        },
                        new
                        {
                            Id = 2016,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address16",
                            City = "City16",
                            ConcurrencyStamp = "eb792842-5228-4c82-a950-017e17975d43",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7573),
                            DateOfBirth = new DateTime(2000, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "user16@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName16",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7574),
                            Lastname = "LastName16",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER16@EXAMPLE.COM",
                            NormalizedUserName = "USER16",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user16/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7568),
                            TwoFactorEnabled = false,
                            UserName = "user16"
                        },
                        new
                        {
                            Id = 2017,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address17",
                            City = "City17",
                            ConcurrencyStamp = "cbf96bbd-2866-4c9b-a1a1-8404ed23c1df",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7587),
                            DateOfBirth = new DateTime(2000, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "user17@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName17",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7588),
                            Lastname = "LastName17",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER17@EXAMPLE.COM",
                            NormalizedUserName = "USER17",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user17/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7581),
                            TwoFactorEnabled = false,
                            UserName = "user17"
                        },
                        new
                        {
                            Id = 2018,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address18",
                            City = "City18",
                            ConcurrencyStamp = "a54d9540-037b-4bf1-ad9f-c1373ddfbb39",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7603),
                            DateOfBirth = new DateTime(2000, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "user18@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName18",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7603),
                            Lastname = "LastName18",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER18@EXAMPLE.COM",
                            NormalizedUserName = "USER18",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user18/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7597),
                            TwoFactorEnabled = false,
                            UserName = "user18"
                        },
                        new
                        {
                            Id = 2019,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address19",
                            City = "City19",
                            ConcurrencyStamp = "ebae795a-932f-47fd-97b2-33c80411cedf",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7616),
                            DateOfBirth = new DateTime(2000, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "user19@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName19",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7616),
                            Lastname = "LastName19",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER19@EXAMPLE.COM",
                            NormalizedUserName = "USER19",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user19/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7611),
                            TwoFactorEnabled = false,
                            UserName = "user19"
                        },
                        new
                        {
                            Id = 2020,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address20",
                            City = "City20",
                            ConcurrencyStamp = "5fde59df-8608-4222-bbb6-ae6b0e77182d",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7633),
                            DateOfBirth = new DateTime(2000, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "user20@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName20",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7633),
                            Lastname = "LastName20",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER20@EXAMPLE.COM",
                            NormalizedUserName = "USER20",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user20/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7624),
                            TwoFactorEnabled = false,
                            UserName = "user20"
                        },
                        new
                        {
                            Id = 2021,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address21",
                            City = "City21",
                            ConcurrencyStamp = "50d5ff1e-306b-4ec0-b986-1a1845816ccf",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7646),
                            DateOfBirth = new DateTime(2000, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Company21@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName21",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7647),
                            Lastname = "CompanyLastName21",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY21@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY21",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user21/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7641),
                            TwoFactorEnabled = false,
                            UserName = "Company21"
                        },
                        new
                        {
                            Id = 2022,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address22",
                            City = "City22",
                            ConcurrencyStamp = "c079b6cd-bfbe-49dd-b1b7-9a1e29eb80e1",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7703),
                            DateOfBirth = new DateTime(2000, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Company22@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName22",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7704),
                            Lastname = "CompanyLastName22",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY22@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY22",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user22/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7660),
                            TwoFactorEnabled = false,
                            UserName = "Company22"
                        },
                        new
                        {
                            Id = 2023,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address23",
                            City = "City23",
                            ConcurrencyStamp = "155954c3-d6de-4c25-943e-e1d93a77faf5",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7718),
                            DateOfBirth = new DateTime(2000, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Company23@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName23",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7719),
                            Lastname = "CompanyLastName23",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY23@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY23",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user23/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7712),
                            TwoFactorEnabled = false,
                            UserName = "Company23"
                        },
                        new
                        {
                            Id = 2024,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address24",
                            City = "City24",
                            ConcurrencyStamp = "6384b6d4-2a18-40ac-8959-888a15db67de",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7732),
                            DateOfBirth = new DateTime(2000, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Company24@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName24",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7732),
                            Lastname = "CompanyLastName24",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY24@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY24",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user24/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7726),
                            TwoFactorEnabled = false,
                            UserName = "Company24"
                        },
                        new
                        {
                            Id = 2025,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address25",
                            City = "City25",
                            ConcurrencyStamp = "bcb51ef8-6eac-40f5-a052-f9680f7885c7",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7746),
                            DateOfBirth = new DateTime(2000, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Company25@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName25",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7746),
                            Lastname = "CompanyLastName25",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY25@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY25",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user25/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7740),
                            TwoFactorEnabled = false,
                            UserName = "Company25"
                        },
                        new
                        {
                            Id = 2026,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address26",
                            City = "City26",
                            ConcurrencyStamp = "77cef02c-38a1-4735-b087-0d7737cebca0",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7759),
                            DateOfBirth = new DateTime(2000, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Company26@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName26",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7760),
                            Lastname = "CompanyLastName26",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY26@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY26",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user26/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7754),
                            TwoFactorEnabled = false,
                            UserName = "Company26"
                        },
                        new
                        {
                            Id = 2027,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address27",
                            City = "City27",
                            ConcurrencyStamp = "28de58d1-e337-45d3-b9da-3ef64f5389ab",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7773),
                            DateOfBirth = new DateTime(2000, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Company27@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName27",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7773),
                            Lastname = "CompanyLastName27",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY27@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY27",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user27/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7767),
                            TwoFactorEnabled = false,
                            UserName = "Company27"
                        },
                        new
                        {
                            Id = 2028,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address28",
                            City = "City28",
                            ConcurrencyStamp = "98472868-6f1d-4dcc-bb91-a4da9eacfb40",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7790),
                            DateOfBirth = new DateTime(2000, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Company28@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName28",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7791),
                            Lastname = "CompanyLastName28",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY28@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY28",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user28/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7781),
                            TwoFactorEnabled = false,
                            UserName = "Company28"
                        },
                        new
                        {
                            Id = 2029,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address29",
                            City = "City29",
                            ConcurrencyStamp = "2f8a11c3-2f1e-470e-b35b-4376fe9e89f3",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7804),
                            DateOfBirth = new DateTime(2000, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Company29@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName29",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7805),
                            Lastname = "CompanyLastName29",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY29@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY29",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user29/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7799),
                            TwoFactorEnabled = false,
                            UserName = "Company29"
                        },
                        new
                        {
                            Id = 2030,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address30",
                            City = "City30",
                            ConcurrencyStamp = "aa4c4598-35a1-4331-ad7f-2c7277088285",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7818),
                            DateOfBirth = new DateTime(2000, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Company30@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName30",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7819),
                            Lastname = "CompanyLastName30",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY30@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY30",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user30/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7813),
                            TwoFactorEnabled = false,
                            UserName = "Company30"
                        },
                        new
                        {
                            Id = 2031,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address31",
                            City = "City31",
                            ConcurrencyStamp = "946c5d25-0aa7-4ca6-b965-c6509bc9fc89",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7872),
                            DateOfBirth = new DateTime(2000, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Company31@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName31",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7873),
                            Lastname = "CompanyLastName31",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY31@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY31",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user31/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7866),
                            TwoFactorEnabled = false,
                            UserName = "Company31"
                        },
                        new
                        {
                            Id = 2032,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address32",
                            City = "City32",
                            ConcurrencyStamp = "49b0d825-810e-47d4-abd4-14973d88f770",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7886),
                            DateOfBirth = new DateTime(2000, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Company32@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName32",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7887),
                            Lastname = "CompanyLastName32",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY32@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY32",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user32/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7881),
                            TwoFactorEnabled = false,
                            UserName = "Company32"
                        },
                        new
                        {
                            Id = 2033,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address33",
                            City = "City33",
                            ConcurrencyStamp = "efc69785-01a0-44ba-bd1b-2cb965505d40",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7900),
                            DateOfBirth = new DateTime(2000, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Company33@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName33",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7900),
                            Lastname = "CompanyLastName33",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY33@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY33",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user33/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7894),
                            TwoFactorEnabled = false,
                            UserName = "Company33"
                        },
                        new
                        {
                            Id = 2034,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address34",
                            City = "City34",
                            ConcurrencyStamp = "d486146a-ba1a-4318-898d-b30b8541be3c",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7916),
                            DateOfBirth = new DateTime(2000, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Company34@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName34",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7916),
                            Lastname = "CompanyLastName34",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY34@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY34",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user34/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7910),
                            TwoFactorEnabled = false,
                            UserName = "Company34"
                        },
                        new
                        {
                            Id = 2035,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address35",
                            City = "City35",
                            ConcurrencyStamp = "6ce59e9c-deeb-4526-950c-0bc11b7eb3ed",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7930),
                            DateOfBirth = new DateTime(2000, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Company35@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName35",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7930),
                            Lastname = "CompanyLastName35",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY35@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY35",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user35/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7924),
                            TwoFactorEnabled = false,
                            UserName = "Company35"
                        },
                        new
                        {
                            Id = 2036,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address36",
                            City = "City36",
                            ConcurrencyStamp = "fac701aa-d484-4f7f-b23c-b1b5f29a6bbe",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7946),
                            DateOfBirth = new DateTime(2000, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Company36@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName36",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7947),
                            Lastname = "CompanyLastName36",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY36@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY36",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user36/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7938),
                            TwoFactorEnabled = false,
                            UserName = "Company36"
                        },
                        new
                        {
                            Id = 2037,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address37",
                            City = "City37",
                            ConcurrencyStamp = "a1843fc7-07a0-4b6e-a315-f6cb5e979f13",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7960),
                            DateOfBirth = new DateTime(2000, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Company37@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName37",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7961),
                            Lastname = "CompanyLastName37",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY37@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY37",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user37/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7955),
                            TwoFactorEnabled = false,
                            UserName = "Company37"
                        },
                        new
                        {
                            Id = 2038,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address38",
                            City = "City38",
                            ConcurrencyStamp = "0d365ae2-6d61-4911-80b0-e1cd2ca9fe56",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7974),
                            DateOfBirth = new DateTime(2000, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Company38@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName38",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(7974),
                            Lastname = "CompanyLastName38",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY38@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY38",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user38/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7968),
                            TwoFactorEnabled = false,
                            UserName = "Company38"
                        },
                        new
                        {
                            Id = 2039,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address39",
                            City = "City39",
                            ConcurrencyStamp = "d59ac757-219a-4640-9c02-addf4d0e78f3",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8027),
                            DateOfBirth = new DateTime(2000, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Company39@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName39",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8028),
                            Lastname = "CompanyLastName39",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY39@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY39",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user39/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(7982),
                            TwoFactorEnabled = false,
                            UserName = "Company39"
                        },
                        new
                        {
                            Id = 2040,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address40",
                            City = "City40",
                            ConcurrencyStamp = "e3fc6dc0-3acc-43b5-8533-387e67e8b2e4",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8041),
                            DateOfBirth = new DateTime(2000, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Company40@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName40",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8042),
                            Lastname = "CompanyLastName40",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY40@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY40",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user40/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(8036),
                            TwoFactorEnabled = false,
                            UserName = "Company40"
                        },
                        new
                        {
                            Id = 2041,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address41",
                            City = "City41",
                            ConcurrencyStamp = "e1f23979-14f9-4634-aee0-cb60139f475f",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8055),
                            DateOfBirth = new DateTime(2000, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Vet41@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName41",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8056),
                            Lastname = "VetLastName41",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET41@EXAMPLE.COM",
                            NormalizedUserName = "VET41",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user41/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(8050),
                            TwoFactorEnabled = false,
                            UserName = "Vet41"
                        },
                        new
                        {
                            Id = 2042,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address42",
                            City = "City42",
                            ConcurrencyStamp = "00aa88b2-724b-40c0-a7db-a6effbd88a40",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8075),
                            DateOfBirth = new DateTime(2000, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Vet42@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName42",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8076),
                            Lastname = "VetLastName42",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET42@EXAMPLE.COM",
                            NormalizedUserName = "VET42",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user42/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(8069),
                            TwoFactorEnabled = false,
                            UserName = "Vet42"
                        },
                        new
                        {
                            Id = 2043,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address43",
                            City = "City43",
                            ConcurrencyStamp = "8225dcee-2b2f-4b39-9d8c-3e46eee65bcd",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8089),
                            DateOfBirth = new DateTime(2000, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Vet43@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName43",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8090),
                            Lastname = "VetLastName43",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET43@EXAMPLE.COM",
                            NormalizedUserName = "VET43",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user43/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(8084),
                            TwoFactorEnabled = false,
                            UserName = "Vet43"
                        },
                        new
                        {
                            Id = 2044,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address44",
                            City = "City44",
                            ConcurrencyStamp = "77d9ebe0-153d-4125-b150-0da8051f0c0d",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8106),
                            DateOfBirth = new DateTime(2000, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Vet44@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName44",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8107),
                            Lastname = "VetLastName44",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET44@EXAMPLE.COM",
                            NormalizedUserName = "VET44",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user44/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(8098),
                            TwoFactorEnabled = false,
                            UserName = "Vet44"
                        },
                        new
                        {
                            Id = 2045,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address45",
                            City = "City45",
                            ConcurrencyStamp = "20ae71da-b43c-46bb-a18f-454f0004c4c8",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8120),
                            DateOfBirth = new DateTime(2000, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Vet45@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName45",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8121),
                            Lastname = "VetLastName45",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET45@EXAMPLE.COM",
                            NormalizedUserName = "VET45",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user45/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(8115),
                            TwoFactorEnabled = false,
                            UserName = "Vet45"
                        },
                        new
                        {
                            Id = 2046,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address46",
                            City = "City46",
                            ConcurrencyStamp = "7ea21cdb-3557-4a1c-ad4c-bc22234559de",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8134),
                            DateOfBirth = new DateTime(2000, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Vet46@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName46",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8134),
                            Lastname = "VetLastName46",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET46@EXAMPLE.COM",
                            NormalizedUserName = "VET46",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user46/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(8128),
                            TwoFactorEnabled = false,
                            UserName = "Vet46"
                        },
                        new
                        {
                            Id = 2047,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address47",
                            City = "City47",
                            ConcurrencyStamp = "e725dbc4-2256-4443-8215-2b629277b79f",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8148),
                            DateOfBirth = new DateTime(2000, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Vet47@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName47",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8149),
                            Lastname = "VetLastName47",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET47@EXAMPLE.COM",
                            NormalizedUserName = "VET47",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user47/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(8142),
                            TwoFactorEnabled = false,
                            UserName = "Vet47"
                        },
                        new
                        {
                            Id = 2048,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address48",
                            City = "City48",
                            ConcurrencyStamp = "1cd9cb33-6d7d-4250-90eb-5a0566134aa5",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8162),
                            DateOfBirth = new DateTime(2000, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Vet48@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName48",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8162),
                            Lastname = "VetLastName48",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET48@EXAMPLE.COM",
                            NormalizedUserName = "VET48",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user48/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(8156),
                            TwoFactorEnabled = false,
                            UserName = "Vet48"
                        },
                        new
                        {
                            Id = 2049,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address49",
                            City = "City49",
                            ConcurrencyStamp = "14b4fbed-1d27-46ed-bcdf-8d04b183e4db",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8212),
                            DateOfBirth = new DateTime(2000, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Vet49@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName49",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8213),
                            Lastname = "VetLastName49",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET49@EXAMPLE.COM",
                            NormalizedUserName = "VET49",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user49/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(8206),
                            TwoFactorEnabled = false,
                            UserName = "Vet49"
                        },
                        new
                        {
                            Id = 2050,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address50",
                            City = "City50",
                            ConcurrencyStamp = "d4acc5a8-cb57-4d81-87ea-5aa3ddd2f2ab",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8226),
                            DateOfBirth = new DateTime(2000, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Vet50@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName50",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8226),
                            Lastname = "VetLastName50",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET50@EXAMPLE.COM",
                            NormalizedUserName = "VET50",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user50/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(8220),
                            TwoFactorEnabled = false,
                            UserName = "Vet50"
                        },
                        new
                        {
                            Id = 2051,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address51",
                            City = "City51",
                            ConcurrencyStamp = "cf5f71ae-30f9-476f-ab92-4be157847db1",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8239),
                            DateOfBirth = new DateTime(2000, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Vet51@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName51",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8240),
                            Lastname = "VetLastName51",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET51@EXAMPLE.COM",
                            NormalizedUserName = "VET51",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user51/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(8234),
                            TwoFactorEnabled = false,
                            UserName = "Vet51"
                        },
                        new
                        {
                            Id = 2052,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address52",
                            City = "City52",
                            ConcurrencyStamp = "38843c6f-ec00-4f29-b92e-bb66720f583f",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8257),
                            DateOfBirth = new DateTime(2000, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Vet52@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName52",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8257),
                            Lastname = "VetLastName52",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET52@EXAMPLE.COM",
                            NormalizedUserName = "VET52",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user52/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(8248),
                            TwoFactorEnabled = false,
                            UserName = "Vet52"
                        },
                        new
                        {
                            Id = 2053,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address53",
                            City = "City53",
                            ConcurrencyStamp = "8d3ce59c-1649-4f0f-a440-3431980884bd",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8271),
                            DateOfBirth = new DateTime(2000, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Vet53@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName53",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8271),
                            Lastname = "VetLastName53",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET53@EXAMPLE.COM",
                            NormalizedUserName = "VET53",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user53/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(8265),
                            TwoFactorEnabled = false,
                            UserName = "Vet53"
                        },
                        new
                        {
                            Id = 2054,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address54",
                            City = "City54",
                            ConcurrencyStamp = "006a756a-f2cd-45da-aa87-46665c1bc30f",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8284),
                            DateOfBirth = new DateTime(2000, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Vet54@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName54",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8284),
                            Lastname = "VetLastName54",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET54@EXAMPLE.COM",
                            NormalizedUserName = "VET54",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user54/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(8279),
                            TwoFactorEnabled = false,
                            UserName = "Vet54"
                        },
                        new
                        {
                            Id = 2055,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address55",
                            City = "City55",
                            ConcurrencyStamp = "2fcd93c3-a324-4190-80c3-efdcfae9763a",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8298),
                            DateOfBirth = new DateTime(2000, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Vet55@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName55",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8299),
                            Lastname = "VetLastName55",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET55@EXAMPLE.COM",
                            NormalizedUserName = "VET55",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user55/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(8292),
                            TwoFactorEnabled = false,
                            UserName = "Vet55"
                        },
                        new
                        {
                            Id = 2056,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address56",
                            City = "City56",
                            ConcurrencyStamp = "aa3b6752-278b-4037-bf75-efd373b1ddbc",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8312),
                            DateOfBirth = new DateTime(2000, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Vet56@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName56",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8312),
                            Lastname = "VetLastName56",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET56@EXAMPLE.COM",
                            NormalizedUserName = "VET56",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user56/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(8306),
                            TwoFactorEnabled = false,
                            UserName = "Vet56"
                        },
                        new
                        {
                            Id = 2057,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address57",
                            City = "City57",
                            ConcurrencyStamp = "998939e0-95e4-4f60-8908-d82d81ffe857",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8325),
                            DateOfBirth = new DateTime(2000, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Vet57@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName57",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8326),
                            Lastname = "VetLastName57",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET57@EXAMPLE.COM",
                            NormalizedUserName = "VET57",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user57/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(8320),
                            TwoFactorEnabled = false,
                            UserName = "Vet57"
                        },
                        new
                        {
                            Id = 2058,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address58",
                            City = "City58",
                            ConcurrencyStamp = "187ecdcc-90d6-4a6e-870c-7630665693fd",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8377),
                            DateOfBirth = new DateTime(2000, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Vet58@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName58",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8377),
                            Lastname = "VetLastName58",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET58@EXAMPLE.COM",
                            NormalizedUserName = "VET58",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user58/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(8371),
                            TwoFactorEnabled = false,
                            UserName = "Vet58"
                        },
                        new
                        {
                            Id = 2059,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address59",
                            City = "City59",
                            ConcurrencyStamp = "59c37aeb-3aa2-41b5-a1f1-8d45e7bf9885",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8391),
                            DateOfBirth = new DateTime(2000, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Vet59@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName59",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8391),
                            Lastname = "VetLastName59",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET59@EXAMPLE.COM",
                            NormalizedUserName = "VET59",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user59/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(8386),
                            TwoFactorEnabled = false,
                            UserName = "Vet59"
                        },
                        new
                        {
                            Id = 2060,
                            About = "NULL",
                            AccessFailedCount = 0,
                            Address = "Address60",
                            City = "City60",
                            ConcurrencyStamp = "335b2680-a0aa-45a6-b064-67bdc630a421",
                            CreatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8408),
                            DateOfBirth = new DateTime(2000, 2, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 1,
                            Email = "Vet60@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName60",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 15, 11, 50, 45, 690, DateTimeKind.Utc).AddTicks(8409),
                            Lastname = "VetLastName60",
                            Likes = 1,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET60@EXAMPLE.COM",
                            NormalizedUserName = "VET60",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user60/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 15, 50, 45, 690, DateTimeKind.Local).AddTicks(8399),
                            TwoFactorEnabled = false,
                            UserName = "Vet60"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Company",
                            NormalizedName = "COMPANY"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Vet",
                            NormalizedName = "VET"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Admin",
                            NormalizedName = "Admin"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 2001,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2002,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2003,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2004,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2005,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2006,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2007,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2008,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2009,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2010,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2011,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2012,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2013,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2014,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2015,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2016,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2017,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2018,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2019,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2020,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2021,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2022,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2023,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2024,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2025,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2026,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2027,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2028,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2029,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2030,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2031,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2032,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2033,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2034,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2035,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2036,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2037,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2038,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2039,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2040,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2041,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2042,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2043,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2044,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2045,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2046,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2047,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2048,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2049,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2050,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2051,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2052,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2053,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2054,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2055,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2056,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2057,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2058,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2059,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2060,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Concretes.AcceptRequest", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.Pet", "Pet")
                        .WithMany("AcceptRequests")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("AcceptRequests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Adoption", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.Pet", "Pet")
                        .WithOne("Adoption")
                        .HasForeignKey("Domain.Entities.Concretes.Adoption", "PetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("Adoptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Breed", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.PetType", "PetType")
                        .WithMany("Breeds")
                        .HasForeignKey("PetTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PetType");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Chat", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("Chats")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "Vet")
                        .WithMany()
                        .HasForeignKey("VetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vet");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Donation", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("Donations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Location", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.Shelter", "Shelter")
                        .WithOne("Location")
                        .HasForeignKey("Domain.Entities.Concretes.Location", "ShelterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Shelter");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Message", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "Sender")
                        .WithMany("Messages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Notification", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Pet", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.PetType", "PetType")
                        .WithMany("Pets")
                        .HasForeignKey("PetTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Concretes.Shelter", "Shelter")
                        .WithMany("Pets")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PetType");

                    b.Navigation("Shelter");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Shelter", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", "Company")
                        .WithMany("Shelters")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Chat", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Pet", b =>
                {
                    b.Navigation("AcceptRequests");

                    b.Navigation("Adoption");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.PetType", b =>
                {
                    b.Navigation("Breeds");

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Shelter", b =>
                {
                    b.Navigation("Location")
                        .IsRequired();

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("Domain.Identity.AppUser", b =>
                {
                    b.Navigation("AcceptRequests");

                    b.Navigation("Adoptions");

                    b.Navigation("Chats");

                    b.Navigation("Donations");

                    b.Navigation("Messages");

                    b.Navigation("Notifications");

                    b.Navigation("Shelters");
                });
#pragma warning restore 612, 618
        }
    }
}
