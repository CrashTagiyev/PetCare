// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistance.Database;

#nullable disable

namespace Persistance.Migrations
{
    [DbContext(typeof(PetCareDB))]
    [Migration("20240814190046_mig996")]
    partial class mig996
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Concretes.AcceptRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AcceptStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("YearsOfPetExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.HasIndex("UserId");

                    b.ToTable("AcceptRequests");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Adoption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Adoptions");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Breed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BreedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PetTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetTypeId");

                    b.ToTable("Breeds");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChatName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VetId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ShelterId")
                        .IsUnique();

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceiverUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdoptionId")
                        .HasColumnType("int");

                    b.Property<short>("Age")
                        .HasColumnType("smallint");

                    b.Property<int>("BreedId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrls")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdopted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PetTypeId");

                    b.HasIndex("ShelterId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.PetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PetTypes");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Shelter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Shelters");
                });

            modelBuilder.Entity("Domain.Identity.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dislikes")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenCreateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RefreshTokenExpireTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 2001,
                            AccessFailedCount = 0,
                            Address = "Address1",
                            City = "City1",
                            ConcurrencyStamp = "36d4d85b-f557-4acb-b62b-1723ce7fa182",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(624),
                            DateOfBirth = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user1@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName1",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(625),
                            Lastname = "LastName1",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@EXAMPLE.COM",
                            NormalizedUserName = "USER1",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user1/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(497),
                            TwoFactorEnabled = false,
                            UserName = "user1"
                        },
                        new
                        {
                            Id = 2002,
                            AccessFailedCount = 0,
                            Address = "Address2",
                            City = "City2",
                            ConcurrencyStamp = "d5be5d65-a5cc-4e82-a829-7423c1f996b9",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1522),
                            DateOfBirth = new DateTime(2000, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user2@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName2",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1523),
                            Lastname = "LastName2",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@EXAMPLE.COM",
                            NormalizedUserName = "USER2",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user2/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(1457),
                            TwoFactorEnabled = false,
                            UserName = "user2"
                        },
                        new
                        {
                            Id = 2003,
                            AccessFailedCount = 0,
                            Address = "Address3",
                            City = "City3",
                            ConcurrencyStamp = "64476800-7924-4949-be8c-514404b2e67b",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1549),
                            DateOfBirth = new DateTime(2000, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user3@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName3",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1549),
                            Lastname = "LastName3",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@EXAMPLE.COM",
                            NormalizedUserName = "USER3",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user3/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(1543),
                            TwoFactorEnabled = false,
                            UserName = "user3"
                        },
                        new
                        {
                            Id = 2004,
                            AccessFailedCount = 0,
                            Address = "Address4",
                            City = "City4",
                            ConcurrencyStamp = "2219b87a-5a5a-43b4-9aea-4bd89812c280",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1564),
                            DateOfBirth = new DateTime(2000, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user4@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName4",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1564),
                            Lastname = "LastName4",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@EXAMPLE.COM",
                            NormalizedUserName = "USER4",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user4/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(1559),
                            TwoFactorEnabled = false,
                            UserName = "user4"
                        },
                        new
                        {
                            Id = 2005,
                            AccessFailedCount = 0,
                            Address = "Address5",
                            City = "City5",
                            ConcurrencyStamp = "d5affa5a-2d22-4a40-b3c7-d2b58f31d206",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1578),
                            DateOfBirth = new DateTime(2000, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user5@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName5",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1578),
                            Lastname = "LastName5",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER5@EXAMPLE.COM",
                            NormalizedUserName = "USER5",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user5/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(1573),
                            TwoFactorEnabled = false,
                            UserName = "user5"
                        },
                        new
                        {
                            Id = 2006,
                            AccessFailedCount = 0,
                            Address = "Address6",
                            City = "City6",
                            ConcurrencyStamp = "13eb4f50-c1b2-4179-b8df-bea881fb2ee9",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1604),
                            DateOfBirth = new DateTime(2000, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user6@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName6",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1604),
                            Lastname = "LastName6",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER6@EXAMPLE.COM",
                            NormalizedUserName = "USER6",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user6/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(1598),
                            TwoFactorEnabled = false,
                            UserName = "user6"
                        },
                        new
                        {
                            Id = 2007,
                            AccessFailedCount = 0,
                            Address = "Address7",
                            City = "City7",
                            ConcurrencyStamp = "8026e3a8-5485-42b9-8e55-9af06704a36d",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1618),
                            DateOfBirth = new DateTime(2000, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user7@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName7",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1619),
                            Lastname = "LastName7",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER7@EXAMPLE.COM",
                            NormalizedUserName = "USER7",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user7/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(1613),
                            TwoFactorEnabled = false,
                            UserName = "user7"
                        },
                        new
                        {
                            Id = 2008,
                            AccessFailedCount = 0,
                            Address = "Address8",
                            City = "City8",
                            ConcurrencyStamp = "43521a16-f517-494f-8c2d-29d893fff7ea",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1651),
                            DateOfBirth = new DateTime(2000, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user8@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName8",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1652),
                            Lastname = "LastName8",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER8@EXAMPLE.COM",
                            NormalizedUserName = "USER8",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user8/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(1627),
                            TwoFactorEnabled = false,
                            UserName = "user8"
                        },
                        new
                        {
                            Id = 2009,
                            AccessFailedCount = 0,
                            Address = "Address9",
                            City = "City9",
                            ConcurrencyStamp = "675cca8e-0b3c-41e7-ae8d-c01ba4f0a28d",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1665),
                            DateOfBirth = new DateTime(2000, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user9@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName9",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1666),
                            Lastname = "LastName9",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER9@EXAMPLE.COM",
                            NormalizedUserName = "USER9",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user9/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(1660),
                            TwoFactorEnabled = false,
                            UserName = "user9"
                        },
                        new
                        {
                            Id = 2010,
                            AccessFailedCount = 0,
                            Address = "Address10",
                            City = "City10",
                            ConcurrencyStamp = "b741214f-9ff5-4221-9dde-cd0f49adf6fd",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1685),
                            DateOfBirth = new DateTime(2000, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user10@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName10",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1686),
                            Lastname = "LastName10",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER10@EXAMPLE.COM",
                            NormalizedUserName = "USER10",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user10/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(1675),
                            TwoFactorEnabled = false,
                            UserName = "user10"
                        },
                        new
                        {
                            Id = 2011,
                            AccessFailedCount = 0,
                            Address = "Address11",
                            City = "City11",
                            ConcurrencyStamp = "458bdd2a-b572-4183-b4d7-37415b8cd0ab",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1737),
                            DateOfBirth = new DateTime(2000, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user11@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName11",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1737),
                            Lastname = "LastName11",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER11@EXAMPLE.COM",
                            NormalizedUserName = "USER11",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user11/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(1729),
                            TwoFactorEnabled = false,
                            UserName = "user11"
                        },
                        new
                        {
                            Id = 2012,
                            AccessFailedCount = 0,
                            Address = "Address12",
                            City = "City12",
                            ConcurrencyStamp = "79bf5989-c4af-4598-a812-ff838185b5ca",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1752),
                            DateOfBirth = new DateTime(2000, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user12@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName12",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1752),
                            Lastname = "LastName12",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER12@EXAMPLE.COM",
                            NormalizedUserName = "USER12",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user12/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(1746),
                            TwoFactorEnabled = false,
                            UserName = "user12"
                        },
                        new
                        {
                            Id = 2013,
                            AccessFailedCount = 0,
                            Address = "Address13",
                            City = "City13",
                            ConcurrencyStamp = "7814c1b3-7803-44c6-a6fe-1e2378934842",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1766),
                            DateOfBirth = new DateTime(2000, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user13@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName13",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1766),
                            Lastname = "LastName13",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER13@EXAMPLE.COM",
                            NormalizedUserName = "USER13",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user13/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(1761),
                            TwoFactorEnabled = false,
                            UserName = "user13"
                        },
                        new
                        {
                            Id = 2014,
                            AccessFailedCount = 0,
                            Address = "Address14",
                            City = "City14",
                            ConcurrencyStamp = "a74a2426-4838-4c44-b8bc-e5b33b0eb4a7",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1779),
                            DateOfBirth = new DateTime(2000, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user14@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName14",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1780),
                            Lastname = "LastName14",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER14@EXAMPLE.COM",
                            NormalizedUserName = "USER14",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user14/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(1774),
                            TwoFactorEnabled = false,
                            UserName = "user14"
                        },
                        new
                        {
                            Id = 2015,
                            AccessFailedCount = 0,
                            Address = "Address15",
                            City = "City15",
                            ConcurrencyStamp = "765f5d7d-84e1-4097-9718-9be0a9fec071",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1793),
                            DateOfBirth = new DateTime(2000, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user15@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName15",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(1793),
                            Lastname = "LastName15",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER15@EXAMPLE.COM",
                            NormalizedUserName = "USER15",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user15/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(1788),
                            TwoFactorEnabled = false,
                            UserName = "user15"
                        },
                        new
                        {
                            Id = 2016,
                            AccessFailedCount = 0,
                            Address = "Address16",
                            City = "City16",
                            ConcurrencyStamp = "a33e688a-517f-4d40-8613-4b900c43c415",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2341),
                            DateOfBirth = new DateTime(2000, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user16@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName16",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2342),
                            Lastname = "LastName16",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER16@EXAMPLE.COM",
                            NormalizedUserName = "USER16",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user16/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(1802),
                            TwoFactorEnabled = false,
                            UserName = "user16"
                        },
                        new
                        {
                            Id = 2017,
                            AccessFailedCount = 0,
                            Address = "Address17",
                            City = "City17",
                            ConcurrencyStamp = "7a9a5f99-1e5a-4e78-b21e-fbe35e8ddb31",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2547),
                            DateOfBirth = new DateTime(2000, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user17@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName17",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2547),
                            Lastname = "LastName17",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER17@EXAMPLE.COM",
                            NormalizedUserName = "USER17",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user17/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(2533),
                            TwoFactorEnabled = false,
                            UserName = "user17"
                        },
                        new
                        {
                            Id = 2018,
                            AccessFailedCount = 0,
                            Address = "Address18",
                            City = "City18",
                            ConcurrencyStamp = "d24a0cc8-bb14-4d94-b82d-be9a6642e711",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2574),
                            DateOfBirth = new DateTime(2000, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user18@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName18",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2575),
                            Lastname = "LastName18",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER18@EXAMPLE.COM",
                            NormalizedUserName = "USER18",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user18/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(2568),
                            TwoFactorEnabled = false,
                            UserName = "user18"
                        },
                        new
                        {
                            Id = 2019,
                            AccessFailedCount = 0,
                            Address = "Address19",
                            City = "City19",
                            ConcurrencyStamp = "69948908-4fe0-4f74-89c0-ba8045c7d598",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2589),
                            DateOfBirth = new DateTime(2000, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user19@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName19",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2590),
                            Lastname = "LastName19",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER19@EXAMPLE.COM",
                            NormalizedUserName = "USER19",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user19/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(2583),
                            TwoFactorEnabled = false,
                            UserName = "user19"
                        },
                        new
                        {
                            Id = 2020,
                            AccessFailedCount = 0,
                            Address = "Address20",
                            City = "City20",
                            ConcurrencyStamp = "4421bf56-145d-4d17-81dd-b4be5bb921d4",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2704),
                            DateOfBirth = new DateTime(2000, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user20@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName20",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2705),
                            Lastname = "LastName20",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER20@EXAMPLE.COM",
                            NormalizedUserName = "USER20",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user20/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(2690),
                            TwoFactorEnabled = false,
                            UserName = "user20"
                        },
                        new
                        {
                            Id = 2021,
                            AccessFailedCount = 0,
                            Address = "Address21",
                            City = "City21",
                            ConcurrencyStamp = "10aa1463-c471-4bcd-a61f-13aebe3552ea",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2719),
                            DateOfBirth = new DateTime(2000, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company21@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName21",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2719),
                            Lastname = "CompanyLastName21",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY21@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY21",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user21/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(2714),
                            TwoFactorEnabled = false,
                            UserName = "Company21"
                        },
                        new
                        {
                            Id = 2022,
                            AccessFailedCount = 0,
                            Address = "Address22",
                            City = "City22",
                            ConcurrencyStamp = "7d8db511-e657-4a9d-8245-0a39e486b2b3",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2740),
                            DateOfBirth = new DateTime(2000, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company22@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName22",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2740),
                            Lastname = "CompanyLastName22",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY22@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY22",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user22/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(2735),
                            TwoFactorEnabled = false,
                            UserName = "Company22"
                        },
                        new
                        {
                            Id = 2023,
                            AccessFailedCount = 0,
                            Address = "Address23",
                            City = "City23",
                            ConcurrencyStamp = "fbb03c5c-526d-431f-8112-d7eab8f4a5ca",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2754),
                            DateOfBirth = new DateTime(2000, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company23@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName23",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2755),
                            Lastname = "CompanyLastName23",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY23@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY23",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user23/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(2749),
                            TwoFactorEnabled = false,
                            UserName = "Company23"
                        },
                        new
                        {
                            Id = 2024,
                            AccessFailedCount = 0,
                            Address = "Address24",
                            City = "City24",
                            ConcurrencyStamp = "070a1103-23f4-458c-a390-56dbf0ede850",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2768),
                            DateOfBirth = new DateTime(2000, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company24@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName24",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2769),
                            Lastname = "CompanyLastName24",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY24@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY24",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user24/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(2763),
                            TwoFactorEnabled = false,
                            UserName = "Company24"
                        },
                        new
                        {
                            Id = 2025,
                            AccessFailedCount = 0,
                            Address = "Address25",
                            City = "City25",
                            ConcurrencyStamp = "113937d7-c3a3-4c2a-9896-6877778d27fa",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2782),
                            DateOfBirth = new DateTime(2000, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company25@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName25",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2783),
                            Lastname = "CompanyLastName25",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY25@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY25",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user25/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(2776),
                            TwoFactorEnabled = false,
                            UserName = "Company25"
                        },
                        new
                        {
                            Id = 2026,
                            AccessFailedCount = 0,
                            Address = "Address26",
                            City = "City26",
                            ConcurrencyStamp = "e5ab9af0-61f2-47d4-b506-9e11a700609a",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2796),
                            DateOfBirth = new DateTime(2000, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company26@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName26",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2796),
                            Lastname = "CompanyLastName26",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY26@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY26",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user26/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(2790),
                            TwoFactorEnabled = false,
                            UserName = "Company26"
                        },
                        new
                        {
                            Id = 2027,
                            AccessFailedCount = 0,
                            Address = "Address27",
                            City = "City27",
                            ConcurrencyStamp = "92307e33-7414-43b7-8e14-a23645fcd0da",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2809),
                            DateOfBirth = new DateTime(2000, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company27@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName27",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2809),
                            Lastname = "CompanyLastName27",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY27@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY27",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user27/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(2804),
                            TwoFactorEnabled = false,
                            UserName = "Company27"
                        },
                        new
                        {
                            Id = 2028,
                            AccessFailedCount = 0,
                            Address = "Address28",
                            City = "City28",
                            ConcurrencyStamp = "0f82d371-eb15-4043-85f1-ef45b01ad9d1",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2827),
                            DateOfBirth = new DateTime(2000, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company28@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName28",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2827),
                            Lastname = "CompanyLastName28",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY28@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY28",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user28/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(2817),
                            TwoFactorEnabled = false,
                            UserName = "Company28"
                        },
                        new
                        {
                            Id = 2029,
                            AccessFailedCount = 0,
                            Address = "Address29",
                            City = "City29",
                            ConcurrencyStamp = "ce1868ce-5521-4291-bf05-c19ad6e16caf",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2879),
                            DateOfBirth = new DateTime(2000, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company29@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName29",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2879),
                            Lastname = "CompanyLastName29",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY29@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY29",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user29/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(2873),
                            TwoFactorEnabled = false,
                            UserName = "Company29"
                        },
                        new
                        {
                            Id = 2030,
                            AccessFailedCount = 0,
                            Address = "Address30",
                            City = "City30",
                            ConcurrencyStamp = "b2a1111a-c736-4366-aec1-d4b83cad2e90",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2893),
                            DateOfBirth = new DateTime(2000, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company30@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName30",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2893),
                            Lastname = "CompanyLastName30",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY30@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY30",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user30/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(2888),
                            TwoFactorEnabled = false,
                            UserName = "Company30"
                        },
                        new
                        {
                            Id = 2031,
                            AccessFailedCount = 0,
                            Address = "Address31",
                            City = "City31",
                            ConcurrencyStamp = "4b237408-ef8d-48bd-aa7a-816e50f0f1c8",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2905),
                            DateOfBirth = new DateTime(2000, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company31@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName31",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2906),
                            Lastname = "CompanyLastName31",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY31@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY31",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user31/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(2900),
                            TwoFactorEnabled = false,
                            UserName = "Company31"
                        },
                        new
                        {
                            Id = 2032,
                            AccessFailedCount = 0,
                            Address = "Address32",
                            City = "City32",
                            ConcurrencyStamp = "c0a1c88f-ba4a-4c9f-a789-683a08ebf015",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2920),
                            DateOfBirth = new DateTime(2000, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company32@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName32",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2920),
                            Lastname = "CompanyLastName32",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY32@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY32",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user32/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(2914),
                            TwoFactorEnabled = false,
                            UserName = "Company32"
                        },
                        new
                        {
                            Id = 2033,
                            AccessFailedCount = 0,
                            Address = "Address33",
                            City = "City33",
                            ConcurrencyStamp = "8f4f2b19-d7a8-486d-b08c-3eaf06125b26",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2933),
                            DateOfBirth = new DateTime(2000, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company33@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName33",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2933),
                            Lastname = "CompanyLastName33",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY33@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY33",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user33/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(2928),
                            TwoFactorEnabled = false,
                            UserName = "Company33"
                        },
                        new
                        {
                            Id = 2034,
                            AccessFailedCount = 0,
                            Address = "Address34",
                            City = "City34",
                            ConcurrencyStamp = "7cc6a655-4aae-4f33-8eb3-dc988d5210e4",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2950),
                            DateOfBirth = new DateTime(2000, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company34@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName34",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2950),
                            Lastname = "CompanyLastName34",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY34@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY34",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user34/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(2944),
                            TwoFactorEnabled = false,
                            UserName = "Company34"
                        },
                        new
                        {
                            Id = 2035,
                            AccessFailedCount = 0,
                            Address = "Address35",
                            City = "City35",
                            ConcurrencyStamp = "12f5178d-7969-4e93-96be-aa320352f0ec",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2964),
                            DateOfBirth = new DateTime(2000, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company35@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName35",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2964),
                            Lastname = "CompanyLastName35",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY35@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY35",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user35/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(2958),
                            TwoFactorEnabled = false,
                            UserName = "Company35"
                        },
                        new
                        {
                            Id = 2036,
                            AccessFailedCount = 0,
                            Address = "Address36",
                            City = "City36",
                            ConcurrencyStamp = "845d398b-fabd-4d8e-ac13-bc973a885afc",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2979),
                            DateOfBirth = new DateTime(2000, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company36@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName36",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(2980),
                            Lastname = "CompanyLastName36",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY36@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY36",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user36/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(2971),
                            TwoFactorEnabled = false,
                            UserName = "Company36"
                        },
                        new
                        {
                            Id = 2037,
                            AccessFailedCount = 0,
                            Address = "Address37",
                            City = "City37",
                            ConcurrencyStamp = "a2720106-b861-42c9-88bf-97d770a2ca21",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3032),
                            DateOfBirth = new DateTime(2000, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company37@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName37",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3033),
                            Lastname = "CompanyLastName37",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY37@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY37",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user37/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3026),
                            TwoFactorEnabled = false,
                            UserName = "Company37"
                        },
                        new
                        {
                            Id = 2038,
                            AccessFailedCount = 0,
                            Address = "Address38",
                            City = "City38",
                            ConcurrencyStamp = "ab898b08-8fcd-421d-b5fa-1ad27c3dd245",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3046),
                            DateOfBirth = new DateTime(2000, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company38@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName38",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3046),
                            Lastname = "CompanyLastName38",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY38@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY38",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user38/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3041),
                            TwoFactorEnabled = false,
                            UserName = "Company38"
                        },
                        new
                        {
                            Id = 2039,
                            AccessFailedCount = 0,
                            Address = "Address39",
                            City = "City39",
                            ConcurrencyStamp = "c966cb73-04ac-4d71-a11f-a943d762acb5",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3059),
                            DateOfBirth = new DateTime(2000, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company39@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName39",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3059),
                            Lastname = "CompanyLastName39",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY39@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY39",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user39/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3054),
                            TwoFactorEnabled = false,
                            UserName = "Company39"
                        },
                        new
                        {
                            Id = 2040,
                            AccessFailedCount = 0,
                            Address = "Address40",
                            City = "City40",
                            ConcurrencyStamp = "b101bd47-0110-4339-aa1e-fcc5b0607b62",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3072),
                            DateOfBirth = new DateTime(2000, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company40@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName40",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3072),
                            Lastname = "CompanyLastName40",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY40@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY40",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user40/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3067),
                            TwoFactorEnabled = false,
                            UserName = "Company40"
                        },
                        new
                        {
                            Id = 2041,
                            AccessFailedCount = 0,
                            Address = "Address41",
                            City = "City41",
                            ConcurrencyStamp = "0b9c3b8e-8d56-4706-83ee-2cd21d38f31e",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3085),
                            DateOfBirth = new DateTime(2000, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet41@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName41",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3085),
                            Lastname = "VetLastName41",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET41@EXAMPLE.COM",
                            NormalizedUserName = "VET41",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user41/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3080),
                            TwoFactorEnabled = false,
                            UserName = "Vet41"
                        },
                        new
                        {
                            Id = 2042,
                            AccessFailedCount = 0,
                            Address = "Address42",
                            City = "City42",
                            ConcurrencyStamp = "ca4005b7-e8d3-429b-9018-e13738065025",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3103),
                            DateOfBirth = new DateTime(2000, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet42@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName42",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3104),
                            Lastname = "VetLastName42",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET42@EXAMPLE.COM",
                            NormalizedUserName = "VET42",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user42/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3098),
                            TwoFactorEnabled = false,
                            UserName = "Vet42"
                        },
                        new
                        {
                            Id = 2043,
                            AccessFailedCount = 0,
                            Address = "Address43",
                            City = "City43",
                            ConcurrencyStamp = "5a9f4491-d7c7-489e-a9ab-16c164574751",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3117),
                            DateOfBirth = new DateTime(2000, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet43@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName43",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3118),
                            Lastname = "VetLastName43",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET43@EXAMPLE.COM",
                            NormalizedUserName = "VET43",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user43/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3112),
                            TwoFactorEnabled = false,
                            UserName = "Vet43"
                        },
                        new
                        {
                            Id = 2044,
                            AccessFailedCount = 0,
                            Address = "Address44",
                            City = "City44",
                            ConcurrencyStamp = "53dcbc12-bdc4-4bc1-a60f-c222c5897e03",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3133),
                            DateOfBirth = new DateTime(2000, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet44@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName44",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3133),
                            Lastname = "VetLastName44",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET44@EXAMPLE.COM",
                            NormalizedUserName = "VET44",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user44/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3125),
                            TwoFactorEnabled = false,
                            UserName = "Vet44"
                        },
                        new
                        {
                            Id = 2045,
                            AccessFailedCount = 0,
                            Address = "Address45",
                            City = "City45",
                            ConcurrencyStamp = "c6958413-69ff-4efd-8283-370c77a9c04c",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3146),
                            DateOfBirth = new DateTime(2000, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet45@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName45",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3146),
                            Lastname = "VetLastName45",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET45@EXAMPLE.COM",
                            NormalizedUserName = "VET45",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user45/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3141),
                            TwoFactorEnabled = false,
                            UserName = "Vet45"
                        },
                        new
                        {
                            Id = 2046,
                            AccessFailedCount = 0,
                            Address = "Address46",
                            City = "City46",
                            ConcurrencyStamp = "162a3e11-1381-4b03-abe5-873d658329f0",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3198),
                            DateOfBirth = new DateTime(2000, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet46@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName46",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3198),
                            Lastname = "VetLastName46",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET46@EXAMPLE.COM",
                            NormalizedUserName = "VET46",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user46/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3192),
                            TwoFactorEnabled = false,
                            UserName = "Vet46"
                        },
                        new
                        {
                            Id = 2047,
                            AccessFailedCount = 0,
                            Address = "Address47",
                            City = "City47",
                            ConcurrencyStamp = "20c6a970-9d2e-473a-827f-6bb815dcb0db",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3211),
                            DateOfBirth = new DateTime(2000, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet47@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName47",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3212),
                            Lastname = "VetLastName47",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET47@EXAMPLE.COM",
                            NormalizedUserName = "VET47",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user47/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3206),
                            TwoFactorEnabled = false,
                            UserName = "Vet47"
                        },
                        new
                        {
                            Id = 2048,
                            AccessFailedCount = 0,
                            Address = "Address48",
                            City = "City48",
                            ConcurrencyStamp = "0d41286e-0ad5-4196-9b07-43c03d754965",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3223),
                            DateOfBirth = new DateTime(2000, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet48@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName48",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3224),
                            Lastname = "VetLastName48",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET48@EXAMPLE.COM",
                            NormalizedUserName = "VET48",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user48/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3219),
                            TwoFactorEnabled = false,
                            UserName = "Vet48"
                        },
                        new
                        {
                            Id = 2049,
                            AccessFailedCount = 0,
                            Address = "Address49",
                            City = "City49",
                            ConcurrencyStamp = "c16d538f-4949-4b25-90dd-f226f0e29a29",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3236),
                            DateOfBirth = new DateTime(2000, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet49@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName49",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3236),
                            Lastname = "VetLastName49",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET49@EXAMPLE.COM",
                            NormalizedUserName = "VET49",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user49/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3231),
                            TwoFactorEnabled = false,
                            UserName = "Vet49"
                        },
                        new
                        {
                            Id = 2050,
                            AccessFailedCount = 0,
                            Address = "Address50",
                            City = "City50",
                            ConcurrencyStamp = "545e2bfa-dc04-4c07-a503-1db5dfc0cb2b",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3249),
                            DateOfBirth = new DateTime(2000, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet50@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName50",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3249),
                            Lastname = "VetLastName50",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET50@EXAMPLE.COM",
                            NormalizedUserName = "VET50",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user50/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3244),
                            TwoFactorEnabled = false,
                            UserName = "Vet50"
                        },
                        new
                        {
                            Id = 2051,
                            AccessFailedCount = 0,
                            Address = "Address51",
                            City = "City51",
                            ConcurrencyStamp = "e9730f93-a8fe-4296-9982-97c92e92ba19",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3262),
                            DateOfBirth = new DateTime(2000, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet51@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName51",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3263),
                            Lastname = "VetLastName51",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET51@EXAMPLE.COM",
                            NormalizedUserName = "VET51",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user51/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3257),
                            TwoFactorEnabled = false,
                            UserName = "Vet51"
                        },
                        new
                        {
                            Id = 2052,
                            AccessFailedCount = 0,
                            Address = "Address52",
                            City = "City52",
                            ConcurrencyStamp = "5b67c064-2bd5-4c81-b7c1-8fdf010f9bb5",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3278),
                            DateOfBirth = new DateTime(2000, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet52@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName52",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3278),
                            Lastname = "VetLastName52",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET52@EXAMPLE.COM",
                            NormalizedUserName = "VET52",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user52/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3270),
                            TwoFactorEnabled = false,
                            UserName = "Vet52"
                        },
                        new
                        {
                            Id = 2053,
                            AccessFailedCount = 0,
                            Address = "Address53",
                            City = "City53",
                            ConcurrencyStamp = "6dae3dca-3f3d-4e3f-bf72-9ed1f98a9514",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3291),
                            DateOfBirth = new DateTime(2000, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet53@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName53",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3291),
                            Lastname = "VetLastName53",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET53@EXAMPLE.COM",
                            NormalizedUserName = "VET53",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user53/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3286),
                            TwoFactorEnabled = false,
                            UserName = "Vet53"
                        },
                        new
                        {
                            Id = 2054,
                            AccessFailedCount = 0,
                            Address = "Address54",
                            City = "City54",
                            ConcurrencyStamp = "75c469e4-a3d1-4ee4-a6d7-2f6d71732348",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3304),
                            DateOfBirth = new DateTime(2000, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet54@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName54",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3304),
                            Lastname = "VetLastName54",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET54@EXAMPLE.COM",
                            NormalizedUserName = "VET54",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user54/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3298),
                            TwoFactorEnabled = false,
                            UserName = "Vet54"
                        },
                        new
                        {
                            Id = 2055,
                            AccessFailedCount = 0,
                            Address = "Address55",
                            City = "City55",
                            ConcurrencyStamp = "b9174ad3-da40-426d-94a2-7eb5fda7b7cd",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3316),
                            DateOfBirth = new DateTime(2000, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet55@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName55",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3316),
                            Lastname = "VetLastName55",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET55@EXAMPLE.COM",
                            NormalizedUserName = "VET55",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user55/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3311),
                            TwoFactorEnabled = false,
                            UserName = "Vet55"
                        },
                        new
                        {
                            Id = 2056,
                            AccessFailedCount = 0,
                            Address = "Address56",
                            City = "City56",
                            ConcurrencyStamp = "ca71fb1c-f721-4b2b-a2cc-494a24a92b84",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3368),
                            DateOfBirth = new DateTime(2000, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet56@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName56",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3368),
                            Lastname = "VetLastName56",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET56@EXAMPLE.COM",
                            NormalizedUserName = "VET56",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user56/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3363),
                            TwoFactorEnabled = false,
                            UserName = "Vet56"
                        },
                        new
                        {
                            Id = 2057,
                            AccessFailedCount = 0,
                            Address = "Address57",
                            City = "City57",
                            ConcurrencyStamp = "2f4ee7dc-0c58-4901-aa82-9b76ca8c102f",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3380),
                            DateOfBirth = new DateTime(2000, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet57@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName57",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3381),
                            Lastname = "VetLastName57",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET57@EXAMPLE.COM",
                            NormalizedUserName = "VET57",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user57/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3376),
                            TwoFactorEnabled = false,
                            UserName = "Vet57"
                        },
                        new
                        {
                            Id = 2058,
                            AccessFailedCount = 0,
                            Address = "Address58",
                            City = "City58",
                            ConcurrencyStamp = "1c091695-1685-4585-b691-e6f5296905cc",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3393),
                            DateOfBirth = new DateTime(2000, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet58@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName58",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3393),
                            Lastname = "VetLastName58",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET58@EXAMPLE.COM",
                            NormalizedUserName = "VET58",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user58/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3388),
                            TwoFactorEnabled = false,
                            UserName = "Vet58"
                        },
                        new
                        {
                            Id = 2059,
                            AccessFailedCount = 0,
                            Address = "Address59",
                            City = "City59",
                            ConcurrencyStamp = "5332bb33-46db-434b-811c-cabeb92226d8",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3406),
                            DateOfBirth = new DateTime(2000, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet59@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName59",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3406),
                            Lastname = "VetLastName59",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET59@EXAMPLE.COM",
                            NormalizedUserName = "VET59",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user59/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3401),
                            TwoFactorEnabled = false,
                            UserName = "Vet59"
                        },
                        new
                        {
                            Id = 2060,
                            AccessFailedCount = 0,
                            Address = "Address60",
                            City = "City60",
                            ConcurrencyStamp = "607d42c4-c113-4185-b198-22458a5e854b",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3421),
                            DateOfBirth = new DateTime(2000, 2, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet60@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName60",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 0, 45, 369, DateTimeKind.Utc).AddTicks(3422),
                            Lastname = "VetLastName60",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET60@EXAMPLE.COM",
                            NormalizedUserName = "VET60",
                            PasswordHash = "AQAAAAIAAYagAAAAENN0Qd8PAufT4/ObfN01Hyf82FngvLUHi6oBmHr1btqyl1036dGPp5F2gHbuOOxVJg==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user60/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 0, 45, 369, DateTimeKind.Local).AddTicks(3413),
                            TwoFactorEnabled = false,
                            UserName = "Vet60"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Concretes.AcceptRequest", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.Pet", "Pet")
                        .WithMany("AcceptRequests")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("AcceptRequests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Adoption", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.Pet", "Pet")
                        .WithOne("Adoption")
                        .HasForeignKey("Domain.Entities.Concretes.Adoption", "PetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("Adoptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Breed", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.PetType", "PetType")
                        .WithMany("Breeds")
                        .HasForeignKey("PetTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PetType");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Chat", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("Chats")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "Vet")
                        .WithMany()
                        .HasForeignKey("VetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vet");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Donation", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("Donations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Location", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.Shelter", "Shelter")
                        .WithOne("Location")
                        .HasForeignKey("Domain.Entities.Concretes.Location", "ShelterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Shelter");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Message", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "Sender")
                        .WithMany("Messages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Notification", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Pet", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.PetType", "PetType")
                        .WithMany("Pets")
                        .HasForeignKey("PetTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Concretes.Shelter", "Shelter")
                        .WithMany("Pets")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PetType");

                    b.Navigation("Shelter");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Shelter", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", "Company")
                        .WithMany("Shelters")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Chat", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Pet", b =>
                {
                    b.Navigation("AcceptRequests");

                    b.Navigation("Adoption");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.PetType", b =>
                {
                    b.Navigation("Breeds");

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Shelter", b =>
                {
                    b.Navigation("Location")
                        .IsRequired();

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("Domain.Identity.AppUser", b =>
                {
                    b.Navigation("AcceptRequests");

                    b.Navigation("Adoptions");

                    b.Navigation("Chats");

                    b.Navigation("Donations");

                    b.Navigation("Messages");

                    b.Navigation("Notifications");

                    b.Navigation("Shelters");
                });
#pragma warning restore 612, 618
        }
    }
}
