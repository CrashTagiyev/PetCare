// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistance.Database;

#nullable disable

namespace Persistance.Migrations
{
    [DbContext(typeof(PetCareDB))]
    [Migration("20240814205406_mig992")]
    partial class mig992
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Concretes.AcceptRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AcceptStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("YearsOfPetExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.HasIndex("UserId");

                    b.ToTable("AcceptRequests");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Adoption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Adoptions");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Breed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BreedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PetTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetTypeId");

                    b.ToTable("Breeds");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChatName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VetId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ShelterId")
                        .IsUnique();

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceiverUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdoptionId")
                        .HasColumnType("int");

                    b.Property<short>("Age")
                        .HasColumnType("smallint");

                    b.Property<int>("BreedId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrls")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdopted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PetTypeId");

                    b.HasIndex("ShelterId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.PetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PetTypes");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Shelter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Shelters");
                });

            modelBuilder.Entity("Domain.Identity.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dislikes")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenCreateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RefreshTokenExpireTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 2001,
                            AccessFailedCount = 0,
                            Address = "Address1",
                            City = "City1",
                            ConcurrencyStamp = "ad498244-2509-4b64-adbd-afdd6ebffb0d",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(8815),
                            DateOfBirth = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user1@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName1",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(8817),
                            Lastname = "LastName1",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@EXAMPLE.COM",
                            NormalizedUserName = "USER1",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user1/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(8697),
                            TwoFactorEnabled = false,
                            UserName = "user1"
                        },
                        new
                        {
                            Id = 2002,
                            AccessFailedCount = 0,
                            Address = "Address2",
                            City = "City2",
                            ConcurrencyStamp = "a1c83f32-9762-4d7b-a050-f6277a124ce9",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(8862),
                            DateOfBirth = new DateTime(2000, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user2@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName2",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(8862),
                            Lastname = "LastName2",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@EXAMPLE.COM",
                            NormalizedUserName = "USER2",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user2/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(8840),
                            TwoFactorEnabled = false,
                            UserName = "user2"
                        },
                        new
                        {
                            Id = 2003,
                            AccessFailedCount = 0,
                            Address = "Address3",
                            City = "City3",
                            ConcurrencyStamp = "f373e34b-5d62-46c2-afbb-fafe4716e7f8",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(8925),
                            DateOfBirth = new DateTime(2000, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user3@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName3",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(8925),
                            Lastname = "LastName3",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@EXAMPLE.COM",
                            NormalizedUserName = "USER3",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user3/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(8919),
                            TwoFactorEnabled = false,
                            UserName = "user3"
                        },
                        new
                        {
                            Id = 2004,
                            AccessFailedCount = 0,
                            Address = "Address4",
                            City = "City4",
                            ConcurrencyStamp = "cd8f09f1-6fa3-408f-83d1-de0727cd56d5",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(8938),
                            DateOfBirth = new DateTime(2000, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user4@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName4",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(8939),
                            Lastname = "LastName4",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@EXAMPLE.COM",
                            NormalizedUserName = "USER4",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user4/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(8933),
                            TwoFactorEnabled = false,
                            UserName = "user4"
                        },
                        new
                        {
                            Id = 2005,
                            AccessFailedCount = 0,
                            Address = "Address5",
                            City = "City5",
                            ConcurrencyStamp = "6ad33bac-abcc-4eef-902d-bb87f21cde28",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(8951),
                            DateOfBirth = new DateTime(2000, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user5@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName5",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(8952),
                            Lastname = "LastName5",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER5@EXAMPLE.COM",
                            NormalizedUserName = "USER5",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user5/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(8946),
                            TwoFactorEnabled = false,
                            UserName = "user5"
                        },
                        new
                        {
                            Id = 2006,
                            AccessFailedCount = 0,
                            Address = "Address6",
                            City = "City6",
                            ConcurrencyStamp = "9a3d2732-d01c-40fc-86d0-714e0e22c9b2",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(8967),
                            DateOfBirth = new DateTime(2000, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user6@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName6",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(8968),
                            Lastname = "LastName6",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER6@EXAMPLE.COM",
                            NormalizedUserName = "USER6",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user6/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(8962),
                            TwoFactorEnabled = false,
                            UserName = "user6"
                        },
                        new
                        {
                            Id = 2007,
                            AccessFailedCount = 0,
                            Address = "Address7",
                            City = "City7",
                            ConcurrencyStamp = "11f4f414-8024-4e08-86b9-4e908596f09b",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(8980),
                            DateOfBirth = new DateTime(2000, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user7@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName7",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(8981),
                            Lastname = "LastName7",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER7@EXAMPLE.COM",
                            NormalizedUserName = "USER7",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user7/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(8975),
                            TwoFactorEnabled = false,
                            UserName = "user7"
                        },
                        new
                        {
                            Id = 2008,
                            AccessFailedCount = 0,
                            Address = "Address8",
                            City = "City8",
                            ConcurrencyStamp = "901eb9b7-855b-4656-8c63-5555e5f76c99",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(8993),
                            DateOfBirth = new DateTime(2000, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user8@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName8",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(8993),
                            Lastname = "LastName8",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER8@EXAMPLE.COM",
                            NormalizedUserName = "USER8",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user8/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(8988),
                            TwoFactorEnabled = false,
                            UserName = "user8"
                        },
                        new
                        {
                            Id = 2009,
                            AccessFailedCount = 0,
                            Address = "Address9",
                            City = "City9",
                            ConcurrencyStamp = "61b25661-74c8-4886-92a6-521a01a566d8",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9005),
                            DateOfBirth = new DateTime(2000, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user9@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName9",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9006),
                            Lastname = "LastName9",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER9@EXAMPLE.COM",
                            NormalizedUserName = "USER9",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user9/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9000),
                            TwoFactorEnabled = false,
                            UserName = "user9"
                        },
                        new
                        {
                            Id = 2010,
                            AccessFailedCount = 0,
                            Address = "Address10",
                            City = "City10",
                            ConcurrencyStamp = "f4adba5a-dda9-4f30-9cbd-4a6ca9f44048",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9025),
                            DateOfBirth = new DateTime(2000, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user10@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName10",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9025),
                            Lastname = "LastName10",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER10@EXAMPLE.COM",
                            NormalizedUserName = "USER10",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user10/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9014),
                            TwoFactorEnabled = false,
                            UserName = "user10"
                        },
                        new
                        {
                            Id = 2011,
                            AccessFailedCount = 0,
                            Address = "Address11",
                            City = "City11",
                            ConcurrencyStamp = "84a3922f-2fe8-46d2-83cc-2dee81d9858e",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9039),
                            DateOfBirth = new DateTime(2000, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user11@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName11",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9040),
                            Lastname = "LastName11",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER11@EXAMPLE.COM",
                            NormalizedUserName = "USER11",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user11/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9034),
                            TwoFactorEnabled = false,
                            UserName = "user11"
                        },
                        new
                        {
                            Id = 2012,
                            AccessFailedCount = 0,
                            Address = "Address12",
                            City = "City12",
                            ConcurrencyStamp = "2a4545ff-7352-4e10-80a9-ee79cf18a793",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9083),
                            DateOfBirth = new DateTime(2000, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user12@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName12",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9084),
                            Lastname = "LastName12",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER12@EXAMPLE.COM",
                            NormalizedUserName = "USER12",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user12/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9077),
                            TwoFactorEnabled = false,
                            UserName = "user12"
                        },
                        new
                        {
                            Id = 2013,
                            AccessFailedCount = 0,
                            Address = "Address13",
                            City = "City13",
                            ConcurrencyStamp = "ea422efd-c7ab-4b83-a9b2-bbd3d3349f6d",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9098),
                            DateOfBirth = new DateTime(2000, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user13@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName13",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9098),
                            Lastname = "LastName13",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER13@EXAMPLE.COM",
                            NormalizedUserName = "USER13",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user13/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9092),
                            TwoFactorEnabled = false,
                            UserName = "user13"
                        },
                        new
                        {
                            Id = 2014,
                            AccessFailedCount = 0,
                            Address = "Address14",
                            City = "City14",
                            ConcurrencyStamp = "959479be-d0b7-4bdb-ab8b-1e6d90826374",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9111),
                            DateOfBirth = new DateTime(2000, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user14@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName14",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9112),
                            Lastname = "LastName14",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER14@EXAMPLE.COM",
                            NormalizedUserName = "USER14",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user14/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9106),
                            TwoFactorEnabled = false,
                            UserName = "user14"
                        },
                        new
                        {
                            Id = 2015,
                            AccessFailedCount = 0,
                            Address = "Address15",
                            City = "City15",
                            ConcurrencyStamp = "d44e68a6-1dad-4dbf-9b25-b510e032e25a",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9125),
                            DateOfBirth = new DateTime(2000, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user15@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName15",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9125),
                            Lastname = "LastName15",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER15@EXAMPLE.COM",
                            NormalizedUserName = "USER15",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user15/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9120),
                            TwoFactorEnabled = false,
                            UserName = "user15"
                        },
                        new
                        {
                            Id = 2016,
                            AccessFailedCount = 0,
                            Address = "Address16",
                            City = "City16",
                            ConcurrencyStamp = "d82a2d10-7f3f-459e-8c85-bbe322edb824",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9138),
                            DateOfBirth = new DateTime(2000, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user16@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName16",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9139),
                            Lastname = "LastName16",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER16@EXAMPLE.COM",
                            NormalizedUserName = "USER16",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user16/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9133),
                            TwoFactorEnabled = false,
                            UserName = "user16"
                        },
                        new
                        {
                            Id = 2017,
                            AccessFailedCount = 0,
                            Address = "Address17",
                            City = "City17",
                            ConcurrencyStamp = "be61f244-0455-4d93-9bae-edf041944194",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9152),
                            DateOfBirth = new DateTime(2000, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user17@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName17",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9153),
                            Lastname = "LastName17",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER17@EXAMPLE.COM",
                            NormalizedUserName = "USER17",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user17/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9147),
                            TwoFactorEnabled = false,
                            UserName = "user17"
                        },
                        new
                        {
                            Id = 2018,
                            AccessFailedCount = 0,
                            Address = "Address18",
                            City = "City18",
                            ConcurrencyStamp = "ebaca591-5093-43e0-886d-c562eee852be",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9170),
                            DateOfBirth = new DateTime(2000, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user18@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName18",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9171),
                            Lastname = "LastName18",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER18@EXAMPLE.COM",
                            NormalizedUserName = "USER18",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user18/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9162),
                            TwoFactorEnabled = false,
                            UserName = "user18"
                        },
                        new
                        {
                            Id = 2019,
                            AccessFailedCount = 0,
                            Address = "Address19",
                            City = "City19",
                            ConcurrencyStamp = "65b90926-63f6-4156-be74-767c06c3dcbc",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9184),
                            DateOfBirth = new DateTime(2000, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user19@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName19",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9184),
                            Lastname = "LastName19",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER19@EXAMPLE.COM",
                            NormalizedUserName = "USER19",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user19/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9179),
                            TwoFactorEnabled = false,
                            UserName = "user19"
                        },
                        new
                        {
                            Id = 2020,
                            AccessFailedCount = 0,
                            Address = "Address20",
                            City = "City20",
                            ConcurrencyStamp = "abf6f7e9-bb9d-44db-94ba-28ea0af99101",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9197),
                            DateOfBirth = new DateTime(2000, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user20@example.com",
                            EmailConfirmed = true,
                            Firstname = "FirstName20",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9198),
                            Lastname = "LastName20",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER20@EXAMPLE.COM",
                            NormalizedUserName = "USER20",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user20/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9192),
                            TwoFactorEnabled = false,
                            UserName = "user20"
                        },
                        new
                        {
                            Id = 2021,
                            AccessFailedCount = 0,
                            Address = "Address21",
                            City = "City21",
                            ConcurrencyStamp = "317bd38f-dc9a-42e2-8f73-07c470af5e54",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9241),
                            DateOfBirth = new DateTime(2000, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company21@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName21",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9241),
                            Lastname = "CompanyLastName21",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY21@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY21",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user21/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9235),
                            TwoFactorEnabled = false,
                            UserName = "Company21"
                        },
                        new
                        {
                            Id = 2022,
                            AccessFailedCount = 0,
                            Address = "Address22",
                            City = "City22",
                            ConcurrencyStamp = "531aebf2-df87-4840-9aaa-67f044ff7779",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9258),
                            DateOfBirth = new DateTime(2000, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company22@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName22",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9259),
                            Lastname = "CompanyLastName22",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY22@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY22",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user22/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9253),
                            TwoFactorEnabled = false,
                            UserName = "Company22"
                        },
                        new
                        {
                            Id = 2023,
                            AccessFailedCount = 0,
                            Address = "Address23",
                            City = "City23",
                            ConcurrencyStamp = "e5dbe976-e7ba-49bb-9e3d-f8542c37fdbb",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9272),
                            DateOfBirth = new DateTime(2000, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company23@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName23",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9272),
                            Lastname = "CompanyLastName23",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY23@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY23",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user23/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9267),
                            TwoFactorEnabled = false,
                            UserName = "Company23"
                        },
                        new
                        {
                            Id = 2024,
                            AccessFailedCount = 0,
                            Address = "Address24",
                            City = "City24",
                            ConcurrencyStamp = "bd0658a6-d895-49c5-a60f-191cd2b0f1a2",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9285),
                            DateOfBirth = new DateTime(2000, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company24@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName24",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9286),
                            Lastname = "CompanyLastName24",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY24@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY24",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user24/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9280),
                            TwoFactorEnabled = false,
                            UserName = "Company24"
                        },
                        new
                        {
                            Id = 2025,
                            AccessFailedCount = 0,
                            Address = "Address25",
                            City = "City25",
                            ConcurrencyStamp = "05e4bcee-3e1f-4e12-82a8-3b759bb18af3",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9298),
                            DateOfBirth = new DateTime(2000, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company25@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName25",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9299),
                            Lastname = "CompanyLastName25",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY25@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY25",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user25/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9293),
                            TwoFactorEnabled = false,
                            UserName = "Company25"
                        },
                        new
                        {
                            Id = 2026,
                            AccessFailedCount = 0,
                            Address = "Address26",
                            City = "City26",
                            ConcurrencyStamp = "dd39a852-70b0-4e4b-9fae-7c33a4e77aa8",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9316),
                            DateOfBirth = new DateTime(2000, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company26@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName26",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9316),
                            Lastname = "CompanyLastName26",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY26@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY26",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user26/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9307),
                            TwoFactorEnabled = false,
                            UserName = "Company26"
                        },
                        new
                        {
                            Id = 2027,
                            AccessFailedCount = 0,
                            Address = "Address27",
                            City = "City27",
                            ConcurrencyStamp = "a2c08737-7e53-4fdb-afe4-ac035a55600c",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9329),
                            DateOfBirth = new DateTime(2000, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company27@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName27",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9330),
                            Lastname = "CompanyLastName27",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY27@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY27",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user27/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9324),
                            TwoFactorEnabled = false,
                            UserName = "Company27"
                        },
                        new
                        {
                            Id = 2028,
                            AccessFailedCount = 0,
                            Address = "Address28",
                            City = "City28",
                            ConcurrencyStamp = "115815ed-9af2-4262-9e16-d2cc27807946",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9343),
                            DateOfBirth = new DateTime(2000, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company28@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName28",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9343),
                            Lastname = "CompanyLastName28",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY28@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY28",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user28/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9338),
                            TwoFactorEnabled = false,
                            UserName = "Company28"
                        },
                        new
                        {
                            Id = 2029,
                            AccessFailedCount = 0,
                            Address = "Address29",
                            City = "City29",
                            ConcurrencyStamp = "ee4ccdb7-cb0b-4d22-8687-0046ebec3e1c",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9356),
                            DateOfBirth = new DateTime(2000, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company29@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName29",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9357),
                            Lastname = "CompanyLastName29",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY29@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY29",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user29/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9351),
                            TwoFactorEnabled = false,
                            UserName = "Company29"
                        },
                        new
                        {
                            Id = 2030,
                            AccessFailedCount = 0,
                            Address = "Address30",
                            City = "City30",
                            ConcurrencyStamp = "5f75b624-0233-40a2-b8a8-cdc2dd4595ba",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9399),
                            DateOfBirth = new DateTime(2000, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company30@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName30",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9400),
                            Lastname = "CompanyLastName30",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY30@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY30",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user30/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9394),
                            TwoFactorEnabled = false,
                            UserName = "Company30"
                        },
                        new
                        {
                            Id = 2031,
                            AccessFailedCount = 0,
                            Address = "Address31",
                            City = "City31",
                            ConcurrencyStamp = "9dcdd5b5-c6de-414d-9ea8-b90ed864f384",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9413),
                            DateOfBirth = new DateTime(2000, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company31@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName31",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9414),
                            Lastname = "CompanyLastName31",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY31@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY31",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user31/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9408),
                            TwoFactorEnabled = false,
                            UserName = "Company31"
                        },
                        new
                        {
                            Id = 2032,
                            AccessFailedCount = 0,
                            Address = "Address32",
                            City = "City32",
                            ConcurrencyStamp = "7a4e2ba1-7bd6-421d-9c9a-21e3b2518b9a",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9427),
                            DateOfBirth = new DateTime(2000, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company32@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName32",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9428),
                            Lastname = "CompanyLastName32",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY32@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY32",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user32/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9422),
                            TwoFactorEnabled = false,
                            UserName = "Company32"
                        },
                        new
                        {
                            Id = 2033,
                            AccessFailedCount = 0,
                            Address = "Address33",
                            City = "City33",
                            ConcurrencyStamp = "74ca6116-ddb1-40bd-a3ab-065a30bb720c",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9441),
                            DateOfBirth = new DateTime(2000, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company33@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName33",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9441),
                            Lastname = "CompanyLastName33",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY33@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY33",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user33/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9436),
                            TwoFactorEnabled = false,
                            UserName = "Company33"
                        },
                        new
                        {
                            Id = 2034,
                            AccessFailedCount = 0,
                            Address = "Address34",
                            City = "City34",
                            ConcurrencyStamp = "ac6a0575-9e67-4338-9ca0-7ac468c736de",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9459),
                            DateOfBirth = new DateTime(2000, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company34@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName34",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9459),
                            Lastname = "CompanyLastName34",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY34@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY34",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user34/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9451),
                            TwoFactorEnabled = false,
                            UserName = "Company34"
                        },
                        new
                        {
                            Id = 2035,
                            AccessFailedCount = 0,
                            Address = "Address35",
                            City = "City35",
                            ConcurrencyStamp = "dfb6b239-1138-4bd3-981e-b329508bd799",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9473),
                            DateOfBirth = new DateTime(2000, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company35@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName35",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9473),
                            Lastname = "CompanyLastName35",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY35@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY35",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user35/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9467),
                            TwoFactorEnabled = false,
                            UserName = "Company35"
                        },
                        new
                        {
                            Id = 2036,
                            AccessFailedCount = 0,
                            Address = "Address36",
                            City = "City36",
                            ConcurrencyStamp = "bbb0216b-6f91-46a7-92e6-d15072bb81f1",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9486),
                            DateOfBirth = new DateTime(2000, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company36@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName36",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9487),
                            Lastname = "CompanyLastName36",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY36@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY36",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user36/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9481),
                            TwoFactorEnabled = false,
                            UserName = "Company36"
                        },
                        new
                        {
                            Id = 2037,
                            AccessFailedCount = 0,
                            Address = "Address37",
                            City = "City37",
                            ConcurrencyStamp = "7c909241-43ac-40ab-90be-d572ad455601",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9500),
                            DateOfBirth = new DateTime(2000, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company37@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName37",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9500),
                            Lastname = "CompanyLastName37",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY37@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY37",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user37/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9495),
                            TwoFactorEnabled = false,
                            UserName = "Company37"
                        },
                        new
                        {
                            Id = 2038,
                            AccessFailedCount = 0,
                            Address = "Address38",
                            City = "City38",
                            ConcurrencyStamp = "7baa8c7b-0cad-4f19-a666-efe63ae40754",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9532),
                            DateOfBirth = new DateTime(2000, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company38@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName38",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9532),
                            Lastname = "CompanyLastName38",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY38@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY38",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user38/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9526),
                            TwoFactorEnabled = false,
                            UserName = "Company38"
                        },
                        new
                        {
                            Id = 2039,
                            AccessFailedCount = 0,
                            Address = "Address39",
                            City = "City39",
                            ConcurrencyStamp = "350c4e8b-774d-4c61-911d-f5fb9f82d7ee",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9545),
                            DateOfBirth = new DateTime(2000, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company39@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName39",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9545),
                            Lastname = "CompanyLastName39",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY39@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY39",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user39/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9540),
                            TwoFactorEnabled = false,
                            UserName = "Company39"
                        },
                        new
                        {
                            Id = 2040,
                            AccessFailedCount = 0,
                            Address = "Address40",
                            City = "City40",
                            ConcurrencyStamp = "0e4da8dd-956c-4fc3-91f3-a126ce586f6f",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9558),
                            DateOfBirth = new DateTime(2000, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company40@example.com",
                            EmailConfirmed = true,
                            Firstname = "CompanyFirstName40",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9558),
                            Lastname = "CompanyLastName40",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY40@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY40",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user40/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9553),
                            TwoFactorEnabled = false,
                            UserName = "Company40"
                        },
                        new
                        {
                            Id = 2041,
                            AccessFailedCount = 0,
                            Address = "Address41",
                            City = "City41",
                            ConcurrencyStamp = "b29e7e38-3825-4fbd-8df3-95be9079f1eb",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9571),
                            DateOfBirth = new DateTime(2000, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet41@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName41",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9572),
                            Lastname = "VetLastName41",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET41@EXAMPLE.COM",
                            NormalizedUserName = "VET41",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user41/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9566),
                            TwoFactorEnabled = false,
                            UserName = "Vet41"
                        },
                        new
                        {
                            Id = 2042,
                            AccessFailedCount = 0,
                            Address = "Address42",
                            City = "City42",
                            ConcurrencyStamp = "a6aaf3b8-bb0a-427e-b2c7-a31be0be204f",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9592),
                            DateOfBirth = new DateTime(2000, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet42@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName42",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9593),
                            Lastname = "VetLastName42",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET42@EXAMPLE.COM",
                            NormalizedUserName = "VET42",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user42/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9584),
                            TwoFactorEnabled = false,
                            UserName = "Vet42"
                        },
                        new
                        {
                            Id = 2043,
                            AccessFailedCount = 0,
                            Address = "Address43",
                            City = "City43",
                            ConcurrencyStamp = "6861bc8c-d6a4-437e-bfae-373bbc026ca9",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9607),
                            DateOfBirth = new DateTime(2000, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet43@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName43",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9607),
                            Lastname = "VetLastName43",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET43@EXAMPLE.COM",
                            NormalizedUserName = "VET43",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user43/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9601),
                            TwoFactorEnabled = false,
                            UserName = "Vet43"
                        },
                        new
                        {
                            Id = 2044,
                            AccessFailedCount = 0,
                            Address = "Address44",
                            City = "City44",
                            ConcurrencyStamp = "ce648f53-65a4-48d8-b01b-92d614a2dcc5",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9621),
                            DateOfBirth = new DateTime(2000, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet44@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName44",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9621),
                            Lastname = "VetLastName44",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET44@EXAMPLE.COM",
                            NormalizedUserName = "VET44",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user44/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9615),
                            TwoFactorEnabled = false,
                            UserName = "Vet44"
                        },
                        new
                        {
                            Id = 2045,
                            AccessFailedCount = 0,
                            Address = "Address45",
                            City = "City45",
                            ConcurrencyStamp = "19a8b239-0644-49f0-bfc2-24c9ee8865cb",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9634),
                            DateOfBirth = new DateTime(2000, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet45@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName45",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9635),
                            Lastname = "VetLastName45",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET45@EXAMPLE.COM",
                            NormalizedUserName = "VET45",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user45/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9629),
                            TwoFactorEnabled = false,
                            UserName = "Vet45"
                        },
                        new
                        {
                            Id = 2046,
                            AccessFailedCount = 0,
                            Address = "Address46",
                            City = "City46",
                            ConcurrencyStamp = "483b5494-9689-406e-8010-1389ff885e92",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9648),
                            DateOfBirth = new DateTime(2000, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet46@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName46",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9648),
                            Lastname = "VetLastName46",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET46@EXAMPLE.COM",
                            NormalizedUserName = "VET46",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user46/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9643),
                            TwoFactorEnabled = false,
                            UserName = "Vet46"
                        },
                        new
                        {
                            Id = 2047,
                            AccessFailedCount = 0,
                            Address = "Address47",
                            City = "City47",
                            ConcurrencyStamp = "fd6fc31b-1630-40b6-adc9-47ee44ec59f6",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9718),
                            DateOfBirth = new DateTime(2000, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet47@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName47",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9719),
                            Lastname = "VetLastName47",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET47@EXAMPLE.COM",
                            NormalizedUserName = "VET47",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user47/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9713),
                            TwoFactorEnabled = false,
                            UserName = "Vet47"
                        },
                        new
                        {
                            Id = 2048,
                            AccessFailedCount = 0,
                            Address = "Address48",
                            City = "City48",
                            ConcurrencyStamp = "4c796bbe-f201-4c3f-a321-1cb79ba74739",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9732),
                            DateOfBirth = new DateTime(2000, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet48@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName48",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9733),
                            Lastname = "VetLastName48",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET48@EXAMPLE.COM",
                            NormalizedUserName = "VET48",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user48/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9727),
                            TwoFactorEnabled = false,
                            UserName = "Vet48"
                        },
                        new
                        {
                            Id = 2049,
                            AccessFailedCount = 0,
                            Address = "Address49",
                            City = "City49",
                            ConcurrencyStamp = "d9651b8b-84d8-4168-9c20-36fccfc2b884",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9746),
                            DateOfBirth = new DateTime(2000, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet49@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName49",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9746),
                            Lastname = "VetLastName49",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET49@EXAMPLE.COM",
                            NormalizedUserName = "VET49",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user49/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9740),
                            TwoFactorEnabled = false,
                            UserName = "Vet49"
                        },
                        new
                        {
                            Id = 2050,
                            AccessFailedCount = 0,
                            Address = "Address50",
                            City = "City50",
                            ConcurrencyStamp = "b010217f-62c3-474b-b8ad-834614d098c0",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9762),
                            DateOfBirth = new DateTime(2000, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet50@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName50",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9762),
                            Lastname = "VetLastName50",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET50@EXAMPLE.COM",
                            NormalizedUserName = "VET50",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user50/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9754),
                            TwoFactorEnabled = false,
                            UserName = "Vet50"
                        },
                        new
                        {
                            Id = 2051,
                            AccessFailedCount = 0,
                            Address = "Address51",
                            City = "City51",
                            ConcurrencyStamp = "45e984a6-3edc-47f2-afe9-8d49cc091f30",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9775),
                            DateOfBirth = new DateTime(2000, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet51@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName51",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9776),
                            Lastname = "VetLastName51",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET51@EXAMPLE.COM",
                            NormalizedUserName = "VET51",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user51/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9770),
                            TwoFactorEnabled = false,
                            UserName = "Vet51"
                        },
                        new
                        {
                            Id = 2052,
                            AccessFailedCount = 0,
                            Address = "Address52",
                            City = "City52",
                            ConcurrencyStamp = "686f33a3-0750-424c-8013-6c7d33ca4696",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9788),
                            DateOfBirth = new DateTime(2000, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet52@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName52",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9789),
                            Lastname = "VetLastName52",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET52@EXAMPLE.COM",
                            NormalizedUserName = "VET52",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user52/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9783),
                            TwoFactorEnabled = false,
                            UserName = "Vet52"
                        },
                        new
                        {
                            Id = 2053,
                            AccessFailedCount = 0,
                            Address = "Address53",
                            City = "City53",
                            ConcurrencyStamp = "c70e8e04-5b9c-4ebc-a451-0c2ffaf9824f",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9802),
                            DateOfBirth = new DateTime(2000, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet53@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName53",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9802),
                            Lastname = "VetLastName53",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET53@EXAMPLE.COM",
                            NormalizedUserName = "VET53",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user53/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9797),
                            TwoFactorEnabled = false,
                            UserName = "Vet53"
                        },
                        new
                        {
                            Id = 2054,
                            AccessFailedCount = 0,
                            Address = "Address54",
                            City = "City54",
                            ConcurrencyStamp = "60799ead-1d50-422f-b634-f2c97de649c3",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9815),
                            DateOfBirth = new DateTime(2000, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet54@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName54",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9815),
                            Lastname = "VetLastName54",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET54@EXAMPLE.COM",
                            NormalizedUserName = "VET54",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user54/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9810),
                            TwoFactorEnabled = false,
                            UserName = "Vet54"
                        },
                        new
                        {
                            Id = 2055,
                            AccessFailedCount = 0,
                            Address = "Address55",
                            City = "City55",
                            ConcurrencyStamp = "55077a64-c3d2-4497-b91c-4761ce3f7ccd",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9829),
                            DateOfBirth = new DateTime(2000, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet55@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName55",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9829),
                            Lastname = "VetLastName55",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET55@EXAMPLE.COM",
                            NormalizedUserName = "VET55",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user55/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9823),
                            TwoFactorEnabled = false,
                            UserName = "Vet55"
                        },
                        new
                        {
                            Id = 2056,
                            AccessFailedCount = 0,
                            Address = "Address56",
                            City = "City56",
                            ConcurrencyStamp = "99dce78c-f0c0-4ebb-b7c9-b86d76bab246",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9884),
                            DateOfBirth = new DateTime(2000, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet56@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName56",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9884),
                            Lastname = "VetLastName56",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET56@EXAMPLE.COM",
                            NormalizedUserName = "VET56",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user56/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9837),
                            TwoFactorEnabled = false,
                            UserName = "Vet56"
                        },
                        new
                        {
                            Id = 2057,
                            AccessFailedCount = 0,
                            Address = "Address57",
                            City = "City57",
                            ConcurrencyStamp = "3e03415e-0c2e-472d-ae7b-47adb3803411",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9898),
                            DateOfBirth = new DateTime(2000, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet57@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName57",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9898),
                            Lastname = "VetLastName57",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET57@EXAMPLE.COM",
                            NormalizedUserName = "VET57",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user57/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9893),
                            TwoFactorEnabled = false,
                            UserName = "Vet57"
                        },
                        new
                        {
                            Id = 2058,
                            AccessFailedCount = 0,
                            Address = "Address58",
                            City = "City58",
                            ConcurrencyStamp = "40b614be-0976-43ce-9be6-646ffb1900c3",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9913),
                            DateOfBirth = new DateTime(2000, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet58@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName58",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9914),
                            Lastname = "VetLastName58",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET58@EXAMPLE.COM",
                            NormalizedUserName = "VET58",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user58/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9905),
                            TwoFactorEnabled = false,
                            UserName = "Vet58"
                        },
                        new
                        {
                            Id = 2059,
                            AccessFailedCount = 0,
                            Address = "Address59",
                            City = "City59",
                            ConcurrencyStamp = "eceeb8f5-3b1f-4e33-8adc-62adac313101",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9927),
                            DateOfBirth = new DateTime(2000, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet59@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName59",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9928),
                            Lastname = "VetLastName59",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET59@EXAMPLE.COM",
                            NormalizedUserName = "VET59",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user59/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9922),
                            TwoFactorEnabled = false,
                            UserName = "Vet59"
                        },
                        new
                        {
                            Id = 2060,
                            AccessFailedCount = 0,
                            Address = "Address60",
                            City = "City60",
                            ConcurrencyStamp = "685b0f4e-b74a-4ffa-baac-03053a9fed93",
                            CreatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9940),
                            DateOfBirth = new DateTime(2000, 2, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet60@example.com",
                            EmailConfirmed = true,
                            Firstname = "VetFirstName60",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 20, 54, 5, 509, DateTimeKind.Utc).AddTicks(9941),
                            Lastname = "VetLastName60",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET60@EXAMPLE.COM",
                            NormalizedUserName = "VET60",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user60/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 15, 0, 54, 5, 509, DateTimeKind.Local).AddTicks(9935),
                            TwoFactorEnabled = false,
                            UserName = "Vet60"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Company",
                            NormalizedName = "COMPANY"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Vet",
                            NormalizedName = "VET"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Admin",
                            NormalizedName = "Admin"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 2001,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2002,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2003,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2004,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2005,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2006,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2007,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2008,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2009,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2010,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2011,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2012,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2013,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2014,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2015,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2016,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2017,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2018,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2019,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2020,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2021,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2022,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2023,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2024,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2025,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2026,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2027,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2028,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2029,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2030,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2031,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2032,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2033,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2034,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2035,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2036,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2037,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2038,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2039,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2040,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2041,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2042,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2043,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2044,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2045,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2046,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2047,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2048,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2049,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2050,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2051,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2052,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2053,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2054,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2055,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2056,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2057,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2058,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2059,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2060,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Concretes.AcceptRequest", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.Pet", "Pet")
                        .WithMany("AcceptRequests")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("AcceptRequests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Adoption", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.Pet", "Pet")
                        .WithOne("Adoption")
                        .HasForeignKey("Domain.Entities.Concretes.Adoption", "PetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("Adoptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Breed", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.PetType", "PetType")
                        .WithMany("Breeds")
                        .HasForeignKey("PetTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PetType");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Chat", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("Chats")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "Vet")
                        .WithMany()
                        .HasForeignKey("VetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vet");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Donation", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("Donations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Location", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.Shelter", "Shelter")
                        .WithOne("Location")
                        .HasForeignKey("Domain.Entities.Concretes.Location", "ShelterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Shelter");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Message", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "Sender")
                        .WithMany("Messages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Notification", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Pet", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.PetType", "PetType")
                        .WithMany("Pets")
                        .HasForeignKey("PetTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Concretes.Shelter", "Shelter")
                        .WithMany("Pets")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PetType");

                    b.Navigation("Shelter");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Shelter", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", "Company")
                        .WithMany("Shelters")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Chat", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Pet", b =>
                {
                    b.Navigation("AcceptRequests");

                    b.Navigation("Adoption");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.PetType", b =>
                {
                    b.Navigation("Breeds");

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Shelter", b =>
                {
                    b.Navigation("Location")
                        .IsRequired();

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("Domain.Identity.AppUser", b =>
                {
                    b.Navigation("AcceptRequests");

                    b.Navigation("Adoptions");

                    b.Navigation("Chats");

                    b.Navigation("Donations");

                    b.Navigation("Messages");

                    b.Navigation("Notifications");

                    b.Navigation("Shelters");
                });
#pragma warning restore 612, 618
        }
    }
}
