// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistance.Database;

#nullable disable

namespace Persistance.Migrations
{
    [DbContext(typeof(PetCareDB))]
    [Migration("20240814190230_mig995")]
    partial class mig995
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Concretes.AcceptRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AcceptStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("YearsOfPetExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.HasIndex("UserId");

                    b.ToTable("AcceptRequests");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Adoption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Adoptions");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Breed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BreedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PetTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetTypeId");

                    b.ToTable("Breeds");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChatName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VetId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ShelterId")
                        .IsUnique();

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceiverUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdoptionId")
                        .HasColumnType("int");

                    b.Property<short>("Age")
                        .HasColumnType("smallint");

                    b.Property<int>("BreedId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrls")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdopted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PetTypeId");

                    b.HasIndex("ShelterId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.PetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PetTypes");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Shelter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Shelters");
                });

            modelBuilder.Entity("Domain.Identity.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dislikes")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenCreateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RefreshTokenExpireTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 2001,
                            AccessFailedCount = 0,
                            Address = "Address1",
                            City = "City1",
                            ConcurrencyStamp = "a3d2b6f4-334f-4e60-b9db-9d309d6831b3",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3397),
                            DateOfBirth = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user1@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName1",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3399),
                            Lastname = "LastName1",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@EXAMPLE.COM",
                            NormalizedUserName = "USER1",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user1/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3268),
                            TwoFactorEnabled = false,
                            UserName = "user1"
                        },
                        new
                        {
                            Id = 2002,
                            AccessFailedCount = 0,
                            Address = "Address2",
                            City = "City2",
                            ConcurrencyStamp = "51279223-cbd2-4165-855b-9e9cd1b29124",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3436),
                            DateOfBirth = new DateTime(2000, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user2@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName2",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3436),
                            Lastname = "LastName2",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@EXAMPLE.COM",
                            NormalizedUserName = "USER2",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user2/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3428),
                            TwoFactorEnabled = false,
                            UserName = "user2"
                        },
                        new
                        {
                            Id = 2003,
                            AccessFailedCount = 0,
                            Address = "Address3",
                            City = "City3",
                            ConcurrencyStamp = "87314677-9679-456d-a921-fb5fa792a728",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3499),
                            DateOfBirth = new DateTime(2000, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user3@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName3",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3500),
                            Lastname = "LastName3",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@EXAMPLE.COM",
                            NormalizedUserName = "USER3",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user3/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3493),
                            TwoFactorEnabled = false,
                            UserName = "user3"
                        },
                        new
                        {
                            Id = 2004,
                            AccessFailedCount = 0,
                            Address = "Address4",
                            City = "City4",
                            ConcurrencyStamp = "20065d78-61d9-4b85-a8cc-c5ba8579a8a1",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3527),
                            DateOfBirth = new DateTime(2000, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user4@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName4",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3528),
                            Lastname = "LastName4",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@EXAMPLE.COM",
                            NormalizedUserName = "USER4",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user4/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3508),
                            TwoFactorEnabled = false,
                            UserName = "user4"
                        },
                        new
                        {
                            Id = 2005,
                            AccessFailedCount = 0,
                            Address = "Address5",
                            City = "City5",
                            ConcurrencyStamp = "a24cb2c0-7561-457a-bc51-a7e533d5d17c",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3541),
                            DateOfBirth = new DateTime(2000, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user5@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName5",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3542),
                            Lastname = "LastName5",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER5@EXAMPLE.COM",
                            NormalizedUserName = "USER5",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user5/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3536),
                            TwoFactorEnabled = false,
                            UserName = "user5"
                        },
                        new
                        {
                            Id = 2006,
                            AccessFailedCount = 0,
                            Address = "Address6",
                            City = "City6",
                            ConcurrencyStamp = "7adcdb1a-c0c5-40c4-9c4d-f08aee1c7370",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3559),
                            DateOfBirth = new DateTime(2000, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user6@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName6",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3559),
                            Lastname = "LastName6",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER6@EXAMPLE.COM",
                            NormalizedUserName = "USER6",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user6/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3553),
                            TwoFactorEnabled = false,
                            UserName = "user6"
                        },
                        new
                        {
                            Id = 2007,
                            AccessFailedCount = 0,
                            Address = "Address7",
                            City = "City7",
                            ConcurrencyStamp = "946252c1-7b46-4d99-98a7-e922510c5053",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3573),
                            DateOfBirth = new DateTime(2000, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user7@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName7",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3574),
                            Lastname = "LastName7",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER7@EXAMPLE.COM",
                            NormalizedUserName = "USER7",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user7/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3568),
                            TwoFactorEnabled = false,
                            UserName = "user7"
                        },
                        new
                        {
                            Id = 2008,
                            AccessFailedCount = 0,
                            Address = "Address8",
                            City = "City8",
                            ConcurrencyStamp = "c59c8b50-8b03-47fc-9f25-100b8a5abfe7",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3587),
                            DateOfBirth = new DateTime(2000, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user8@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName8",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3588),
                            Lastname = "LastName8",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER8@EXAMPLE.COM",
                            NormalizedUserName = "USER8",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user8/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3582),
                            TwoFactorEnabled = false,
                            UserName = "user8"
                        },
                        new
                        {
                            Id = 2009,
                            AccessFailedCount = 0,
                            Address = "Address9",
                            City = "City9",
                            ConcurrencyStamp = "724d9e11-297d-4284-9d9c-fdf1be7770ba",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3603),
                            DateOfBirth = new DateTime(2000, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user9@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName9",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3603),
                            Lastname = "LastName9",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER9@EXAMPLE.COM",
                            NormalizedUserName = "USER9",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user9/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3596),
                            TwoFactorEnabled = false,
                            UserName = "user9"
                        },
                        new
                        {
                            Id = 2010,
                            AccessFailedCount = 0,
                            Address = "Address10",
                            City = "City10",
                            ConcurrencyStamp = "bb5d4c6c-da62-4d72-8f40-e8a0e6c4f5c9",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3621),
                            DateOfBirth = new DateTime(2000, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user10@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName10",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3621),
                            Lastname = "LastName10",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER10@EXAMPLE.COM",
                            NormalizedUserName = "USER10",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user10/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3613),
                            TwoFactorEnabled = false,
                            UserName = "user10"
                        },
                        new
                        {
                            Id = 2011,
                            AccessFailedCount = 0,
                            Address = "Address11",
                            City = "City11",
                            ConcurrencyStamp = "697dc1ca-869c-4805-950f-1c05201e7c54",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3636),
                            DateOfBirth = new DateTime(2000, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user11@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName11",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3636),
                            Lastname = "LastName11",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER11@EXAMPLE.COM",
                            NormalizedUserName = "USER11",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user11/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3631),
                            TwoFactorEnabled = false,
                            UserName = "user11"
                        },
                        new
                        {
                            Id = 2012,
                            AccessFailedCount = 0,
                            Address = "Address12",
                            City = "City12",
                            ConcurrencyStamp = "04372d74-b8af-4e94-81b3-c49da4559117",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3690),
                            DateOfBirth = new DateTime(2000, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user12@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName12",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3690),
                            Lastname = "LastName12",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER12@EXAMPLE.COM",
                            NormalizedUserName = "USER12",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user12/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3645),
                            TwoFactorEnabled = false,
                            UserName = "user12"
                        },
                        new
                        {
                            Id = 2013,
                            AccessFailedCount = 0,
                            Address = "Address13",
                            City = "City13",
                            ConcurrencyStamp = "6d1805d4-ba26-4c30-ba0e-d07e8a7d523c",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3705),
                            DateOfBirth = new DateTime(2000, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user13@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName13",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3706),
                            Lastname = "LastName13",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER13@EXAMPLE.COM",
                            NormalizedUserName = "USER13",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user13/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3699),
                            TwoFactorEnabled = false,
                            UserName = "user13"
                        },
                        new
                        {
                            Id = 2014,
                            AccessFailedCount = 0,
                            Address = "Address14",
                            City = "City14",
                            ConcurrencyStamp = "05ef2183-2b72-4ee5-b23a-f717f4c3b4c9",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3720),
                            DateOfBirth = new DateTime(2000, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user14@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName14",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3720),
                            Lastname = "LastName14",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER14@EXAMPLE.COM",
                            NormalizedUserName = "USER14",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user14/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3714),
                            TwoFactorEnabled = false,
                            UserName = "user14"
                        },
                        new
                        {
                            Id = 2015,
                            AccessFailedCount = 0,
                            Address = "Address15",
                            City = "City15",
                            ConcurrencyStamp = "50c32b3b-7c38-4d10-a123-97bbb54d3d1d",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3734),
                            DateOfBirth = new DateTime(2000, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user15@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName15",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3735),
                            Lastname = "LastName15",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER15@EXAMPLE.COM",
                            NormalizedUserName = "USER15",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user15/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3729),
                            TwoFactorEnabled = false,
                            UserName = "user15"
                        },
                        new
                        {
                            Id = 2016,
                            AccessFailedCount = 0,
                            Address = "Address16",
                            City = "City16",
                            ConcurrencyStamp = "af3aa788-2f82-4bb0-9269-6a87f10e3ab4",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3748),
                            DateOfBirth = new DateTime(2000, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user16@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName16",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3749),
                            Lastname = "LastName16",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER16@EXAMPLE.COM",
                            NormalizedUserName = "USER16",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user16/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3743),
                            TwoFactorEnabled = false,
                            UserName = "user16"
                        },
                        new
                        {
                            Id = 2017,
                            AccessFailedCount = 0,
                            Address = "Address17",
                            City = "City17",
                            ConcurrencyStamp = "fd18c7a7-cad9-4fd5-98c6-ca70d396a7fe",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3763),
                            DateOfBirth = new DateTime(2000, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user17@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName17",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3764),
                            Lastname = "LastName17",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER17@EXAMPLE.COM",
                            NormalizedUserName = "USER17",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user17/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3758),
                            TwoFactorEnabled = false,
                            UserName = "user17"
                        },
                        new
                        {
                            Id = 2018,
                            AccessFailedCount = 0,
                            Address = "Address18",
                            City = "City18",
                            ConcurrencyStamp = "8ebb4a3f-287d-4f22-a8ad-5072c7772fe0",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3779),
                            DateOfBirth = new DateTime(2000, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user18@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName18",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3780),
                            Lastname = "LastName18",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER18@EXAMPLE.COM",
                            NormalizedUserName = "USER18",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user18/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3774),
                            TwoFactorEnabled = false,
                            UserName = "user18"
                        },
                        new
                        {
                            Id = 2019,
                            AccessFailedCount = 0,
                            Address = "Address19",
                            City = "City19",
                            ConcurrencyStamp = "09cb471b-0ff4-43ab-982b-3e44f7a600ff",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3794),
                            DateOfBirth = new DateTime(2000, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user19@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName19",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3794),
                            Lastname = "LastName19",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER19@EXAMPLE.COM",
                            NormalizedUserName = "USER19",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user19/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3788),
                            TwoFactorEnabled = false,
                            UserName = "user19"
                        },
                        new
                        {
                            Id = 2020,
                            AccessFailedCount = 0,
                            Address = "Address20",
                            City = "City20",
                            ConcurrencyStamp = "e85b56f8-12ba-4cdd-9546-718e86fec485",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3812),
                            DateOfBirth = new DateTime(2000, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "user20@example.com",
                            EmailConfirmed = false,
                            Firstname = "FirstName20",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3812),
                            Lastname = "LastName20",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER20@EXAMPLE.COM",
                            NormalizedUserName = "USER20",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user20/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3803),
                            TwoFactorEnabled = false,
                            UserName = "user20"
                        },
                        new
                        {
                            Id = 2021,
                            AccessFailedCount = 0,
                            Address = "Address21",
                            City = "City21",
                            ConcurrencyStamp = "8dbaca79-fc21-447f-9b6e-5772b493069c",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3858),
                            DateOfBirth = new DateTime(2000, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company21@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName21",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3859),
                            Lastname = "CompanyLastName21",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY21@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY21",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user21/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3852),
                            TwoFactorEnabled = false,
                            UserName = "Company21"
                        },
                        new
                        {
                            Id = 2022,
                            AccessFailedCount = 0,
                            Address = "Address22",
                            City = "City22",
                            ConcurrencyStamp = "01f57958-601c-4b5f-818a-a464c2a40cff",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3878),
                            DateOfBirth = new DateTime(2000, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company22@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName22",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3879),
                            Lastname = "CompanyLastName22",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY22@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY22",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user22/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3872),
                            TwoFactorEnabled = false,
                            UserName = "Company22"
                        },
                        new
                        {
                            Id = 2023,
                            AccessFailedCount = 0,
                            Address = "Address23",
                            City = "City23",
                            ConcurrencyStamp = "3dca588e-eef3-4cc7-b1c4-2595e291bb07",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3893),
                            DateOfBirth = new DateTime(2000, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company23@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName23",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3894),
                            Lastname = "CompanyLastName23",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY23@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY23",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user23/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3888),
                            TwoFactorEnabled = false,
                            UserName = "Company23"
                        },
                        new
                        {
                            Id = 2024,
                            AccessFailedCount = 0,
                            Address = "Address24",
                            City = "City24",
                            ConcurrencyStamp = "e1cefbf9-7f53-41a7-ae0d-b82f0e05020a",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3908),
                            DateOfBirth = new DateTime(2000, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company24@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName24",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3908),
                            Lastname = "CompanyLastName24",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY24@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY24",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user24/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3902),
                            TwoFactorEnabled = false,
                            UserName = "Company24"
                        },
                        new
                        {
                            Id = 2025,
                            AccessFailedCount = 0,
                            Address = "Address25",
                            City = "City25",
                            ConcurrencyStamp = "546e0cef-d1d2-4d74-a757-5a95ac957e41",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3922),
                            DateOfBirth = new DateTime(2000, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company25@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName25",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3922),
                            Lastname = "CompanyLastName25",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY25@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY25",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user25/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3917),
                            TwoFactorEnabled = false,
                            UserName = "Company25"
                        },
                        new
                        {
                            Id = 2026,
                            AccessFailedCount = 0,
                            Address = "Address26",
                            City = "City26",
                            ConcurrencyStamp = "c45ac3fb-6fb4-4ced-88e7-8a21a5347582",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3937),
                            DateOfBirth = new DateTime(2000, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company26@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName26",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3938),
                            Lastname = "CompanyLastName26",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY26@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY26",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user26/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3931),
                            TwoFactorEnabled = false,
                            UserName = "Company26"
                        },
                        new
                        {
                            Id = 2027,
                            AccessFailedCount = 0,
                            Address = "Address27",
                            City = "City27",
                            ConcurrencyStamp = "4ce85c12-b847-48f3-aa84-0eceb6795ade",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3952),
                            DateOfBirth = new DateTime(2000, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company27@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName27",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3952),
                            Lastname = "CompanyLastName27",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY27@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY27",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user27/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3947),
                            TwoFactorEnabled = false,
                            UserName = "Company27"
                        },
                        new
                        {
                            Id = 2028,
                            AccessFailedCount = 0,
                            Address = "Address28",
                            City = "City28",
                            ConcurrencyStamp = "3d342769-2855-4dc8-a5ba-c9197779311e",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3969),
                            DateOfBirth = new DateTime(2000, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company28@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName28",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3970),
                            Lastname = "CompanyLastName28",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY28@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY28",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user28/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3961),
                            TwoFactorEnabled = false,
                            UserName = "Company28"
                        },
                        new
                        {
                            Id = 2029,
                            AccessFailedCount = 0,
                            Address = "Address29",
                            City = "City29",
                            ConcurrencyStamp = "82066386-6fdc-4d4c-8f92-62a6ca16a1f1",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3985),
                            DateOfBirth = new DateTime(2000, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company29@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName29",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(3985),
                            Lastname = "CompanyLastName29",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY29@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY29",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user29/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(3979),
                            TwoFactorEnabled = false,
                            UserName = "Company29"
                        },
                        new
                        {
                            Id = 2030,
                            AccessFailedCount = 0,
                            Address = "Address30",
                            City = "City30",
                            ConcurrencyStamp = "2b728e98-0342-4c9f-a443-30545193e4f6",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4031),
                            DateOfBirth = new DateTime(2000, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company30@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName30",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4032),
                            Lastname = "CompanyLastName30",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY30@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY30",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user30/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4025),
                            TwoFactorEnabled = false,
                            UserName = "Company30"
                        },
                        new
                        {
                            Id = 2031,
                            AccessFailedCount = 0,
                            Address = "Address31",
                            City = "City31",
                            ConcurrencyStamp = "8f1c8b73-448f-4596-be75-36c5afd74d13",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4046),
                            DateOfBirth = new DateTime(2000, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company31@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName31",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4046),
                            Lastname = "CompanyLastName31",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY31@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY31",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user31/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4041),
                            TwoFactorEnabled = false,
                            UserName = "Company31"
                        },
                        new
                        {
                            Id = 2032,
                            AccessFailedCount = 0,
                            Address = "Address32",
                            City = "City32",
                            ConcurrencyStamp = "b852ef0e-08c3-468c-ba64-27f2ca7cc06d",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4060),
                            DateOfBirth = new DateTime(2000, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company32@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName32",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4061),
                            Lastname = "CompanyLastName32",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY32@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY32",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user32/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4055),
                            TwoFactorEnabled = false,
                            UserName = "Company32"
                        },
                        new
                        {
                            Id = 2033,
                            AccessFailedCount = 0,
                            Address = "Address33",
                            City = "City33",
                            ConcurrencyStamp = "7d7cc09d-5bf7-441e-ac46-399b1f5f4784",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4074),
                            DateOfBirth = new DateTime(2000, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company33@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName33",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4075),
                            Lastname = "CompanyLastName33",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY33@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY33",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user33/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4069),
                            TwoFactorEnabled = false,
                            UserName = "Company33"
                        },
                        new
                        {
                            Id = 2034,
                            AccessFailedCount = 0,
                            Address = "Address34",
                            City = "City34",
                            ConcurrencyStamp = "915dc780-4c4f-4a36-9cec-5b176abce6da",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4091),
                            DateOfBirth = new DateTime(2000, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company34@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName34",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4092),
                            Lastname = "CompanyLastName34",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY34@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY34",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user34/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4086),
                            TwoFactorEnabled = false,
                            UserName = "Company34"
                        },
                        new
                        {
                            Id = 2035,
                            AccessFailedCount = 0,
                            Address = "Address35",
                            City = "City35",
                            ConcurrencyStamp = "0482645e-7a4a-48a7-9949-68e72a558e9e",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4106),
                            DateOfBirth = new DateTime(2000, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company35@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName35",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4106),
                            Lastname = "CompanyLastName35",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY35@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY35",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user35/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4100),
                            TwoFactorEnabled = false,
                            UserName = "Company35"
                        },
                        new
                        {
                            Id = 2036,
                            AccessFailedCount = 0,
                            Address = "Address36",
                            City = "City36",
                            ConcurrencyStamp = "9cdb5bc9-92b2-476f-81de-2dca715b47c3",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4123),
                            DateOfBirth = new DateTime(2000, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company36@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName36",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4123),
                            Lastname = "CompanyLastName36",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY36@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY36",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user36/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4114),
                            TwoFactorEnabled = false,
                            UserName = "Company36"
                        },
                        new
                        {
                            Id = 2037,
                            AccessFailedCount = 0,
                            Address = "Address37",
                            City = "City37",
                            ConcurrencyStamp = "b444d3a1-6376-4298-bf44-2cb5f609b9ef",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4138),
                            DateOfBirth = new DateTime(2000, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company37@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName37",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4138),
                            Lastname = "CompanyLastName37",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY37@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY37",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user37/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4132),
                            TwoFactorEnabled = false,
                            UserName = "Company37"
                        },
                        new
                        {
                            Id = 2038,
                            AccessFailedCount = 0,
                            Address = "Address38",
                            City = "City38",
                            ConcurrencyStamp = "8a122241-20aa-49da-8a4c-6cf424432988",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4182),
                            DateOfBirth = new DateTime(2000, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company38@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName38",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4182),
                            Lastname = "CompanyLastName38",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY38@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY38",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user38/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4146),
                            TwoFactorEnabled = false,
                            UserName = "Company38"
                        },
                        new
                        {
                            Id = 2039,
                            AccessFailedCount = 0,
                            Address = "Address39",
                            City = "City39",
                            ConcurrencyStamp = "822fb754-9e4e-4e8f-808c-048def1da0a1",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4196),
                            DateOfBirth = new DateTime(2000, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company39@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName39",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4197),
                            Lastname = "CompanyLastName39",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY39@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY39",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user39/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4191),
                            TwoFactorEnabled = false,
                            UserName = "Company39"
                        },
                        new
                        {
                            Id = 2040,
                            AccessFailedCount = 0,
                            Address = "Address40",
                            City = "City40",
                            ConcurrencyStamp = "26f56aae-559d-410d-8e52-449c01aedb9b",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4211),
                            DateOfBirth = new DateTime(2000, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Company40@example.com",
                            EmailConfirmed = false,
                            Firstname = "CompanyFirstName40",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4211),
                            Lastname = "CompanyLastName40",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "COMPANY40@EXAMPLE.COM",
                            NormalizedUserName = "COMPANY40",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user40/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4205),
                            TwoFactorEnabled = false,
                            UserName = "Company40"
                        },
                        new
                        {
                            Id = 2041,
                            AccessFailedCount = 0,
                            Address = "Address41",
                            City = "City41",
                            ConcurrencyStamp = "5ad7353f-7572-4022-b2b4-69678e5aa28f",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4226),
                            DateOfBirth = new DateTime(2000, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet41@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName41",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4226),
                            Lastname = "VetLastName41",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET41@EXAMPLE.COM",
                            NormalizedUserName = "VET41",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user41/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4220),
                            TwoFactorEnabled = false,
                            UserName = "Vet41"
                        },
                        new
                        {
                            Id = 2042,
                            AccessFailedCount = 0,
                            Address = "Address42",
                            City = "City42",
                            ConcurrencyStamp = "5f54513a-f9a3-483c-9dcb-f7a926409057",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4245),
                            DateOfBirth = new DateTime(2000, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet42@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName42",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4246),
                            Lastname = "VetLastName42",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET42@EXAMPLE.COM",
                            NormalizedUserName = "VET42",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user42/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4240),
                            TwoFactorEnabled = false,
                            UserName = "Vet42"
                        },
                        new
                        {
                            Id = 2043,
                            AccessFailedCount = 0,
                            Address = "Address43",
                            City = "City43",
                            ConcurrencyStamp = "c2034459-81d8-4425-ba22-626eacf66f2d",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4260),
                            DateOfBirth = new DateTime(2000, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet43@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName43",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4260),
                            Lastname = "VetLastName43",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET43@EXAMPLE.COM",
                            NormalizedUserName = "VET43",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user43/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4255),
                            TwoFactorEnabled = false,
                            UserName = "Vet43"
                        },
                        new
                        {
                            Id = 2044,
                            AccessFailedCount = 0,
                            Address = "Address44",
                            City = "City44",
                            ConcurrencyStamp = "97711a43-dac0-405e-ae5b-b375b5e569be",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4278),
                            DateOfBirth = new DateTime(2000, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet44@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName44",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4278),
                            Lastname = "VetLastName44",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET44@EXAMPLE.COM",
                            NormalizedUserName = "VET44",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user44/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4270),
                            TwoFactorEnabled = false,
                            UserName = "Vet44"
                        },
                        new
                        {
                            Id = 2045,
                            AccessFailedCount = 0,
                            Address = "Address45",
                            City = "City45",
                            ConcurrencyStamp = "0b374e95-0336-4fa6-bae3-63dadf8c5391",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4293),
                            DateOfBirth = new DateTime(2000, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet45@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName45",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4294),
                            Lastname = "VetLastName45",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET45@EXAMPLE.COM",
                            NormalizedUserName = "VET45",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user45/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4288),
                            TwoFactorEnabled = false,
                            UserName = "Vet45"
                        },
                        new
                        {
                            Id = 2046,
                            AccessFailedCount = 0,
                            Address = "Address46",
                            City = "City46",
                            ConcurrencyStamp = "31727611-a4ff-44a9-a68e-3abe206837f4",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4308),
                            DateOfBirth = new DateTime(2000, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet46@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName46",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4309),
                            Lastname = "VetLastName46",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET46@EXAMPLE.COM",
                            NormalizedUserName = "VET46",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user46/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4303),
                            TwoFactorEnabled = false,
                            UserName = "Vet46"
                        },
                        new
                        {
                            Id = 2047,
                            AccessFailedCount = 0,
                            Address = "Address47",
                            City = "City47",
                            ConcurrencyStamp = "7dede10a-f6eb-40da-a696-0dff3dd66636",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4323),
                            DateOfBirth = new DateTime(2000, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet47@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName47",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4323),
                            Lastname = "VetLastName47",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET47@EXAMPLE.COM",
                            NormalizedUserName = "VET47",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user47/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4318),
                            TwoFactorEnabled = false,
                            UserName = "Vet47"
                        },
                        new
                        {
                            Id = 2048,
                            AccessFailedCount = 0,
                            Address = "Address48",
                            City = "City48",
                            ConcurrencyStamp = "ebbc52b4-8d58-4dd0-975c-18ef53e74978",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4357),
                            DateOfBirth = new DateTime(2000, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet48@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName48",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4357),
                            Lastname = "VetLastName48",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET48@EXAMPLE.COM",
                            NormalizedUserName = "VET48",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user48/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4351),
                            TwoFactorEnabled = false,
                            UserName = "Vet48"
                        },
                        new
                        {
                            Id = 2049,
                            AccessFailedCount = 0,
                            Address = "Address49",
                            City = "City49",
                            ConcurrencyStamp = "be9c9889-ee88-4852-bf8e-8817fb0c38f7",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4371),
                            DateOfBirth = new DateTime(2000, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet49@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName49",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4372),
                            Lastname = "VetLastName49",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET49@EXAMPLE.COM",
                            NormalizedUserName = "VET49",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user49/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4366),
                            TwoFactorEnabled = false,
                            UserName = "Vet49"
                        },
                        new
                        {
                            Id = 2050,
                            AccessFailedCount = 0,
                            Address = "Address50",
                            City = "City50",
                            ConcurrencyStamp = "63b9c132-e7a4-4dfe-b73b-d6c8f3812b97",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4386),
                            DateOfBirth = new DateTime(2000, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet50@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName50",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4386),
                            Lastname = "VetLastName50",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET50@EXAMPLE.COM",
                            NormalizedUserName = "VET50",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user50/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4380),
                            TwoFactorEnabled = false,
                            UserName = "Vet50"
                        },
                        new
                        {
                            Id = 2051,
                            AccessFailedCount = 0,
                            Address = "Address51",
                            City = "City51",
                            ConcurrencyStamp = "9f03caa9-a0c1-4879-9ae9-5742a42ac453",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4401),
                            DateOfBirth = new DateTime(2000, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet51@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName51",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4401),
                            Lastname = "VetLastName51",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET51@EXAMPLE.COM",
                            NormalizedUserName = "VET51",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user51/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4395),
                            TwoFactorEnabled = false,
                            UserName = "Vet51"
                        },
                        new
                        {
                            Id = 2052,
                            AccessFailedCount = 0,
                            Address = "Address52",
                            City = "City52",
                            ConcurrencyStamp = "02e064ee-b108-474f-b80f-553ba6f283ad",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4419),
                            DateOfBirth = new DateTime(2000, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet52@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName52",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4419),
                            Lastname = "VetLastName52",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET52@EXAMPLE.COM",
                            NormalizedUserName = "VET52",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user52/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4410),
                            TwoFactorEnabled = false,
                            UserName = "Vet52"
                        },
                        new
                        {
                            Id = 2053,
                            AccessFailedCount = 0,
                            Address = "Address53",
                            City = "City53",
                            ConcurrencyStamp = "63a6faae-2107-4c90-a51d-208cd953cc03",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4433),
                            DateOfBirth = new DateTime(2000, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet53@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName53",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4433),
                            Lastname = "VetLastName53",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET53@EXAMPLE.COM",
                            NormalizedUserName = "VET53",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user53/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4428),
                            TwoFactorEnabled = false,
                            UserName = "Vet53"
                        },
                        new
                        {
                            Id = 2054,
                            AccessFailedCount = 0,
                            Address = "Address54",
                            City = "City54",
                            ConcurrencyStamp = "c519a3bd-38b0-43b4-b3ce-5a1d193bdef9",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4447),
                            DateOfBirth = new DateTime(2000, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet54@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName54",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4448),
                            Lastname = "VetLastName54",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET54@EXAMPLE.COM",
                            NormalizedUserName = "VET54",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user54/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4442),
                            TwoFactorEnabled = false,
                            UserName = "Vet54"
                        },
                        new
                        {
                            Id = 2055,
                            AccessFailedCount = 0,
                            Address = "Address55",
                            City = "City55",
                            ConcurrencyStamp = "7cd12d80-1877-4be7-a7de-9dbb4c9be158",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4461),
                            DateOfBirth = new DateTime(2000, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet55@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName55",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4462),
                            Lastname = "VetLastName55",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET55@EXAMPLE.COM",
                            NormalizedUserName = "VET55",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user55/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4456),
                            TwoFactorEnabled = false,
                            UserName = "Vet55"
                        },
                        new
                        {
                            Id = 2056,
                            AccessFailedCount = 0,
                            Address = "Address56",
                            City = "City56",
                            ConcurrencyStamp = "516477b9-fb47-46b3-bb60-1e11548a36f7",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4476),
                            DateOfBirth = new DateTime(2000, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet56@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName56",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4477),
                            Lastname = "VetLastName56",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET56@EXAMPLE.COM",
                            NormalizedUserName = "VET56",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user56/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4471),
                            TwoFactorEnabled = false,
                            UserName = "Vet56"
                        },
                        new
                        {
                            Id = 2057,
                            AccessFailedCount = 0,
                            Address = "Address57",
                            City = "City57",
                            ConcurrencyStamp = "f8d2b079-35c7-4470-8bef-6bd0ce8d91cb",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4549),
                            DateOfBirth = new DateTime(2000, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet57@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName57",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4550),
                            Lastname = "VetLastName57",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET57@EXAMPLE.COM",
                            NormalizedUserName = "VET57",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user57/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4544),
                            TwoFactorEnabled = false,
                            UserName = "Vet57"
                        },
                        new
                        {
                            Id = 2058,
                            AccessFailedCount = 0,
                            Address = "Address58",
                            City = "City58",
                            ConcurrencyStamp = "38621237-11f8-496c-b8ed-73cbab9132aa",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4564),
                            DateOfBirth = new DateTime(2000, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet58@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName58",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4565),
                            Lastname = "VetLastName58",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET58@EXAMPLE.COM",
                            NormalizedUserName = "VET58",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user58/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4559),
                            TwoFactorEnabled = false,
                            UserName = "Vet58"
                        },
                        new
                        {
                            Id = 2059,
                            AccessFailedCount = 0,
                            Address = "Address59",
                            City = "City59",
                            ConcurrencyStamp = "1a7f64aa-aaa6-4902-8560-87aae39f30a8",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4579),
                            DateOfBirth = new DateTime(2000, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet59@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName59",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4579),
                            Lastname = "VetLastName59",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET59@EXAMPLE.COM",
                            NormalizedUserName = "VET59",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user59/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4573),
                            TwoFactorEnabled = false,
                            UserName = "Vet59"
                        },
                        new
                        {
                            Id = 2060,
                            AccessFailedCount = 0,
                            Address = "Address60",
                            City = "City60",
                            ConcurrencyStamp = "b390502a-0ebc-4915-805a-8d717b865d4f",
                            CreatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4597),
                            DateOfBirth = new DateTime(2000, 2, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Dislikes = 0,
                            Email = "Vet60@example.com",
                            EmailConfirmed = false,
                            Firstname = "VetFirstName60",
                            IsDeleted = false,
                            LastUpdatedTime = new DateTime(2024, 8, 14, 19, 2, 28, 562, DateTimeKind.Utc).AddTicks(4598),
                            Lastname = "VetLastName60",
                            Likes = 0,
                            LockoutEnabled = false,
                            NormalizedEmail = "VET60@EXAMPLE.COM",
                            NormalizedUserName = "VET60",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3JbxnMOU+exC6cOxQLvXvHG6Xt/a7qhEXNftH7DTJLiaC5qZ4fuRAYHF58dVJXaQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImageUrl = "https://picsum.photos/seed/user60/200/300",
                            RefreshTokenCreateTime = new DateTime(2024, 8, 14, 23, 2, 28, 562, DateTimeKind.Local).AddTicks(4589),
                            TwoFactorEnabled = false,
                            UserName = "Vet60"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Concretes.AcceptRequest", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.Pet", "Pet")
                        .WithMany("AcceptRequests")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("AcceptRequests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Adoption", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.Pet", "Pet")
                        .WithOne("Adoption")
                        .HasForeignKey("Domain.Entities.Concretes.Adoption", "PetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("Adoptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Breed", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.PetType", "PetType")
                        .WithMany("Breeds")
                        .HasForeignKey("PetTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PetType");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Chat", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("Chats")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "Vet")
                        .WithMany()
                        .HasForeignKey("VetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vet");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Donation", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("Donations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Location", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.Shelter", "Shelter")
                        .WithOne("Location")
                        .HasForeignKey("Domain.Entities.Concretes.Location", "ShelterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Shelter");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Message", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", "Sender")
                        .WithMany("Messages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Notification", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Pet", b =>
                {
                    b.HasOne("Domain.Entities.Concretes.PetType", "PetType")
                        .WithMany("Pets")
                        .HasForeignKey("PetTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Concretes.Shelter", "Shelter")
                        .WithMany("Pets")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PetType");

                    b.Navigation("Shelter");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Shelter", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", "Company")
                        .WithMany("Shelters")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Chat", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Pet", b =>
                {
                    b.Navigation("AcceptRequests");

                    b.Navigation("Adoption");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.PetType", b =>
                {
                    b.Navigation("Breeds");

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("Domain.Entities.Concretes.Shelter", b =>
                {
                    b.Navigation("Location")
                        .IsRequired();

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("Domain.Identity.AppUser", b =>
                {
                    b.Navigation("AcceptRequests");

                    b.Navigation("Adoptions");

                    b.Navigation("Chats");

                    b.Navigation("Donations");

                    b.Navigation("Messages");

                    b.Navigation("Notifications");

                    b.Navigation("Shelters");
                });
#pragma warning restore 612, 618
        }
    }
}
